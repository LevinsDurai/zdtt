function ZohoDeskEditor(a) {
    "use strict",
    this.state = "loading",
    this.mode = "richtext",
    a && a.mode === "plaintext" && (this.mode = "plaintext"),
    this.initobj = a || {},
    this.outerdiv = a.element ? a.element : document.getElementById(a.id),
    this.outerdiv.className = "KB_Editor",
    this.toolbardiv = undefined,
    this.toolbarobject = undefined,
    this.popupdiv = undefined,
    this.styletext = a.styletext || !1,
    this.afterload = a.callback || undefined,
    this.trackimgclick = a.trackimgclick || undefined,
    this.trackeditorexpansion = a.trackeditorexpansion || undefined,
    this.imageuploadcallback = a.imageuploadcallback || undefined,
    this.insertHTMLCallback = a.insertHTMLCallback || undefined,
    this.setContentCallback = a.setContentCallback || undefined,
    this.contentChanged = a.contentChanged || undefined,
    this.needDraggableImage = a.needDraggableImage || !1,
    this.handleAlertMessage = a.handleAlertMessage || undefined,
    this.processPastedFile = a.processPastedFile || !1,
    this.handleInlineDropImage = a.handleInlineDropImage || !1,
    this.needScrollView = a.needScrollView || !1,
    this.isExpanded = !1,
    this.direction = "ltr",
    this.createToolbar(),
    this.createEditor(),
    ZohoDeskEditor_Init.needEditorStats && (this.clickCount = {});
    if (ZohoDeskEditor_Init.needplaintext && !this.initobj.avoidPlainText) {
        var b = !ZohoDeskEditor_Init.needEditorFocus;
        this.mode === "plaintext" && this.plainText(a.content, {
            avoidFocus: b,
            plainTextData: ZohoDeskEditor_Init.plainTextDataDef
        })
    }
}
ZohoDeskEditor.create = function(a) {
    "use strict";
    if (ZohoDeskEditor_Init.loading) {
        var b = function() {
            ZohoDeskEditor_Init.loadURL(ZohoDeskEditor_Init.jsPath + "/ZohoDeskEditor.min.js", "js", "ZohoDeskJs")
        };
        setTimeout(b, 0), delete ZohoDeskEditor_Init.loading
    }
    return new ZohoDeskEditor(a)
}, ZohoDeskEditor.prototype.createProgressbar = function() {
    var a = this,
        b = a.toolbardiv.getElementsByClassName("KB_Editor_Progres");
    if (b && b.length) b[0].style.display = "";
    else {
        b = document.createElement("div"), b.id = "progress", b.className = "KB_Editor_Progres", this.toolbardiv.appendChild(b);
        for (var c = 0; c < 3; c++) {
            var d = document.createElement("div");
            d.className = "prgs_lbrk prgs_ldt" + (c + 1), b.appendChild(d)
        }
    }
}, ZohoDeskEditor.prototype.afterEditorLoad = function(a) {
    "use strict";
    var b = this;
    b.state ? b.afterload.push(a) : a()
}, ZohoDeskEditor.prototype.setContent = function(a, b) {
    "use strict";
    var c = this,
        d, e = c.mode,
        f = {};
    if (typeof a == "undefined") return;
    var g = document.createElement("div");
    g.innerHTML = a;
    var h = g.getElementsByClassName("direction");
    h && h.length && (c.doc.body.style.direction = "rtl", c.toolbarobject.direction && (c.toolbarobject.direction.className = "KBEditortools-rtl"), a = h[0].innerHTML);
    if (c.state) d = function(a) {
        return function() {
            c.setContent(a)
        }
    }(a), c.afterload.push(d);
    else if (e && e === "plaintext") c._textarea.value = a;
    else {
        c.processPastedFile && (f.oldState = b), c.squireInstance.setHTML(a, f), c.win.focus(), b || c.saveCurrentState();
        try {
            c.updateToolbar()
        } catch (i) {}
    }
    c.setContentCallback && c.setContentCallback()
}, ZohoDeskEditor.setProcessedContent = function(a) {
    "use strict";
    var b = this,
        c = b.mode;
    c && c === "plaintext" ? a = a.replace(/\n/gi, "<br/>") : a = a.replace(/<br.*?>/gi, "\n")
}, ZohoDeskEditor.i18n = function(a) {
    "use strict";
    var b = ZohoDeskEditor_Init.language;
    return !b || b === "en" ? a : ZohoDeskEditor.i18nObj[a] || a
}, ZohoDeskEditor.prototype.focusAtStart = function(a) {
    "use strict";
    var b = this,
        c = b.win,
        d = b.doc,
        e = c.getSelection() || d.selection;
    if (e) {
        var f = b._createRange(e);
        d.body.firstChild ? (f.setStart(d.body.firstChild, 0), f.setEnd(d.body.firstChild, 0), e.removeAllRanges(), e.addRange(f)) : e.collapse(d.body, 0)
    }
    a ? c.focus() : setTimeout(function() {
        c.focus()
    }, 300)
}, ZohoDeskEditor.prototype.getRawContent = function() {
    "use strict";
    var a = this;
    return a.scspan && a.scspan.style.display !== "none" && (a.removeSpellcheckspans(), a.scspan.style.display = "none"), a.getContent()
}, ZohoDeskEditor.prototype.getContent = function() {
    "use strict";
    var a = this,
        b = a.mode,
        c, d, e, f;
    if (b && b === "plaintext") {
        c = a._textarea;
        if (c) {
            d = c.value, a.scspan && a.scspan.style.display !== "none" && (d = a.getSpellcheckRemovedContent("plaintext"), d = ZohoDeskEditor.getText(d));
            if (d) return ZohoDeskEditor_Init.setContentProcessed && (d = d.replace(/\r+/gi, ""), d = d.replace(/\n/gi, "<br />")), d
        }
    } else {
        e = a.doc;
        if (e) return a.scspan && a.scspan.style.display !== "none" ? f = a.getSpellcheckRemovedContent("richtext") : f = e.body.innerHTML, a.doc.body.style.direction === "rtl" && (f = "<div class='direction' style='direction:rtl;text-align:right'>" + f + "</div"), f
    }
    return ""
}, ZohoDeskEditor.prototype.confirmPlainText = function(a) {
    "use strict";
    var b = this,
        c = ZohoDeskEditor.i18n;
    confirm(c("When you switch to plain text mode, you will loose the formatting and images. Continue ?")) && (b.plainText(a), ZohoDeskEditor_Init.modeChange && ZohoDeskEditor_Init.modeChange(b.mode))
}, ZohoDeskEditor.prototype.plainText = function(a, b) {
    "use strict";
    var c = this,
        d = c.toolbardiv.getElementsByTagName("ul"),
        e = d[0],
        f = d[1],
        g = c._textarea,
        b = b || {};
    c.mode = "plaintext", e.style.display = "none", f.style.display = "", f.children[0].classList.remove("KB_Editor_FullScreen"), g || (g = document.createElement("textarea"), g.className = "ze_area", c._textarea = g, c.outerdiv.appendChild(g), g.onbeforedeactivate = function() {
        var a = document.selection;
        a && (c.textrange = a.createRange())
    }, ZohoDeskEditor._addEvent(g, "keyup", function() {
        var a = this.value;
        c.initobj.contentChanged && typeof c.initobj.contentChanged == "function" && a !== c._textareaValue && (c._textareaValue = a, c.initobj.contentChanged())
    }), ZohoDeskEditor_Init.avoidDropDragHandle || ZohoDeskEditor._addEvent(g, "dragover", function(a) {
        var b = a.dataTransfer,
            d = ZohoDeskEditor.i18n,
            e;
        if (b.types !== null || b.files && b.files.length > 0)
            if (b.files && b.files.length > 0 || (b.types.indexOf ? b.types.indexOf("Files") > -1 : b.types.contains("application/x-moz-file")) || b.types[0] === "Files") {
                var f, g;
                f = document.getElementById("mask_editor"), e = b.effectAllowed, b.dropEffect = e === "move" || e === "linkMove" ? "move" : "copy";
                if (!f) {
                    f = document.createElement("div"), f.contentEditable = "false", f.id = "mask_editor", document.body.appendChild(f), ZohoDeskEditor._addEvent(f, "dragover", function(a) {
                        clearTimeout(c.dragTimer);
                        var b = a.dataTransfer.effectAllowed;
                        a.dataTransfer.dropEffect = b === "move" || b === "linkMove" ? "move" : "copy", c._stopEvent(a)
                    }), ZohoDeskEditor._addEvent(f, "dragleave", function(a) {
                        c.dragTimer = setTimeout(function() {
                            var a = document.getElementById("mask_editor");
                            a && a.parentElement.removeChild(a)
                        }, 250), c._stopEvent(a)
                    }), ZohoDeskEditor._addEvent(f, "drop", function(a) {
                        c._stopEvent(a), f && f.parentElement.removeChild(f);
                        var b = a.dataTransfer.files;
                        if (!b || b.length === 0) return;
                        ZohoDeskEditor_Init.fileUpload(c, b, a)
                    });
                    var h = c._textarea.getBoundingClientRect();
                    f.style.left = h.left + "px", f.style.width = h.right + "px", f.style.height = h.height + "px", f.style.width = h.width + "px", f.style.top = h.top + "px", f.style.position = "absolute", g = document.createElement("div"), g.className = "ze_drag", g.contentEditable = "false";
                    var i = document.createElement("span");
                    g.appendChild(i), i.innerHTML = d("Drop Files to Attach"), f.appendChild(g)
                }
                c._stopEvent(a)
            }
    })), a && (g.value = b.plainTextData ? a : ZohoDeskEditor.getText(a)), c._textareaValue = g.value, c.iframe.style.display = "none", g.style.height = c.iframe.style.height, g.style.display = "";
    try {
        b.avoidFocus || (g.focus(), g.setSelectionRange && g.setSelectionRange(0, 0))
    } catch (h) {}
}, ZohoDeskEditor.prototype.richText = function(a) {
    "use strict";
    var b = this,
        c = b.toolbardiv.getElementsByTagName("ul"),
        d = c[0],
        e = c[1],
        f = b._textarea;
    e.style.display = "none", e.children[0].classList.add("KB_Editor_FullScreen"), d.style.display = "", b.mode = "richtext", f.style.display = "none";
    if (a) {
        var g = b._textarea.value.split("\n");
        b.setRichText(g)
    } else b.squireInstance.setHTML("");
    b.stack && b.stack.commands.length > 0 && (b.stack.clearStack(), b.saveCurrentState({
        cursorPosition: {
            start: 0,
            end: 0
        }
    })), b.iframe.style.height = f.style.height, b.iframe.style.display = "", setTimeout(function() {
        b.focusAtStart(!0), b.squireInstance.focus(), b.updateToolbar()
    }, 0)
}, ZohoDeskEditor.prototype.setRichText = function(a) {
    var b = this,
        c = b.doc;
    c.body.innerHTML = "";
    if (!a && !a.length) return;
    for (var d = 0; d < a.length; d++) {
        var e = c.createElement("div");
        c.body.appendChild(e), e.innerHTML = ZohoDeskEditor.getFormattedContent(a[d]), e.appendChild(c.createElement("br"))
    }
}, ZohoDeskEditor.getFormattedContent = function(a) {
    return "use strict", /<|>|&|"|'|\\/g.test(a) == 1 && (a = a.replace(/&/g, "&amp;"), a = a.replace(/</g, "&lt;"), a = a.replace(/>/g, "&gt;"), a = a.replace(/"/g, "&quot;"), a = a.replace(/\\/g, "&#x5c;"), a = a.replace(/'/g, "&#39;")), a
}, ZohoDeskEditor._setAttribute = function(a, b, c) {
    "use strict",
    a.setAttribute(b, c)
}, ZohoDeskEditor._appendChildren = function(a, b) {
    "use strict";
    var c = b.length;
    for (var d = 0; d < c; d++) a.appendChild(b[d])
}, ZohoDeskEditor._setStyle = function(a, b, c) {
    "use strict";
    if (typeof b == "object") {
        var d = Object.keys(b),
            e = d.length;
        for (var f = 0; f < e; f++) a.style[d[f]] = b[d[f]]
    } else typeof b == "string" && (a.style[b] = c)
}, ZohoDeskEditor.setCss = function(a, b, c) {
    "use strict",
    a.style[b] = c
};
var getHugeAttList = function(a) {
    var b = a,
        c = [],
        d = /https:\/\/docs.localzoho.com\/file\/.[(a-z)(A-Z)(0-9]*/g,
        e = [],
        c = b.match(d),
        f = c.length,
        g = /https:\/\/docs.localzoho.com\/file\//g;
    for (var h = 0; h < f; h++) {
        var i = c[h].replace(g, "");
        e.push(i)
    }
    return e
};
ZohoDeskEditor.getText = function(a) {
    "use strict";
    if (a) {
        var b = function(a) {
                var b, c, d, e = [],
                    f = [],
                    g = [],
                    h = a;
                b = document.createElement("div"), b.innerHTML = "", a = a.replace(/\n+/gi, ""), a = a.replace(/\r+/gi, ""), a = a.replace(/<!--.*?-->/gi, ""), a = a.replace(/<head>.*?<\/head>/gi, ""), e = a.match(/<a .*? data-hugatt="hugatt".*?<\/a>/g), e || (e = a.match(/<a .*? data-hugatt="hugatt".*?<\/a>/g));
                if (e) {
                    for (d = 0; d < e.length; d++) b.innerHTML += e[d], e[d] = e[d].replace(/[\(]/g, "\\("), e[d] = e[d].replace(/[\)]/g, "\\)"), f.push(new RegExp(e[d]));
                    g = b.getElementsByTagName("a");
                    for (d = 0; d < e.length; d++) {
                        var i = g[d].innerHTML + "\n" + g[d].getAttribute("href");
                        a = a.replace(f[d], i)
                    }
                }
                return a = a.replace(/<div .*? data-hugatt="hugatt".*?><\/div>/g, ""), a = a.replace(/<br.*?>/gi, "\n"), a = a.replace(/<hr.*?>/gi, "\n"), a = a.replace(/<\/p>/gi, "\n"), a = a.replace(/<\/h[1-6]>/gi, "\n"), a = a.replace(/<\/tr>/gi, "\n"), a = a.replace(/<\/li>/gi, "\n"), a = a.replace(/<\/td>/gi, " "), a = a.replace(/<\/th>/gi, ""), a = a.replace(/<.*?>/gi, ""), a = a.replace(/&nbsp;/gi, " "), a = a.replace(/&lt;/gi, "<"), a = a.replace(/&gt;/gi, ">"), a = a.replace(/&quot;/gi, '"'), a = a.replace(/&amp;/gi, "&"), a
            },
            c = a.search(/<blockquote/gi);
        if (c !== -1) {
            var d = a.search(/<blockquote/gi),
                e = a.toLowerCase().lastIndexOf("</blockquote>"),
                f = a.substring(d, e + 13);
            return a = a.replace(f, "##===###===##"), f = b(f), f = f.replace(/\n/gi, "\n > "), f = " > " + f, a = b(a), a.search(/##===###===##/gi) !== -1 && (a = a.replace("##===###===##", f)), a
        }
        return b(a)
    }
    return ""
}, ZohoDeskEditor.prototype.setMode = function(a) {
    "use strict";
    var b = this,
        c = b.mode;
    a === "plaintext" ? c !== a && b.confirmPlainText("") : c !== "richtext" && b.richText("")
}, ZohoDeskEditor.getContextValue = function() {
    return "use strict", ZohoDeskEditor_Init.contextVal ? "/" + ZohoDeskEditor_Init.contextVal : ""
}, ZohoDeskEditor.sendInitRequest = function(a) {
    "use strict";
    var b = document.getElementById("ze_img_request"),
        c = ZohoDeskEditor.getContextValue();
    b || (b = document.createElement("iframe"), b.name = "ze_img_request", b.id = "ze_img_request", b.style.width = "0px", b.style.height = "0px", b.style.border = "0px", b.src = c + "/ze/blank?t=" + (new Date).getTime(), document.body.appendChild(b)), a === "true" && (b.src = c + "/ze/blank?t=" + (new Date).getTime())
}, ZohoDeskEditor.getCSRFParamName = function() {
    return "use strict", ZohoDeskEditor_Init.csrfParamVal || "zereqid"
}, ZohoDeskEditor.getCSRFCookie = function(a) {
    "use strict";
    if (ZohoDeskEditor_Init.csrfCookieVal && ZohoDeskEditor_Init.csrfParamVal) return ZohoDeskEditor_Init.csrfCookieVal;
    var b = ZohoDeskEditor_Init.csrfCookieName || "ZohoDeskEditor_CSRF_TOKEN",
        c = document.cookie.indexOf(b);
    if (c > -1) {
        var d = b.length,
            e = a.doc.cookie.indexOf(b) + d,
            f = a.doc.cookie.indexOf(";", e);
        f > -1 && (f = a.doc.cookie.length);
        var g = a.doc.cookie.substring(e + 1, f);
        return g
    }
    return null
}, ZohoDeskEditor.addClass = function(a, b) {
    "use strict",
    a.className.indexOf(b) == -1 && (a.className ? a.className += " " + b : a.className = b)
}, ZohoDeskEditor.removeClass = function(a, b) {
    "use strict",
    a.className = a.className.replace(b, ""),
    a.className = ZohoDeskEditor.trim(a.className)
}, ZohoDeskEditor._addEvent = function(a, b, c) {
    "use strict",
    a && (document.addEventListener ? a.addEventListener(b, c, !0) : a.attachEvent("on" + b, c, !0))
}, ZohoDeskEditor._removeEvent = function(a, b, c) {
    "use strict",
    a && (document.removeEventListener ? a.removeEventListener(b, c, !0) : a.detachEvent("on" + b, c, !0))
}, ZohoDeskEditor.hasClass = function(a, b) {
    return "use strict", a.className.indexOf(b) > -1 ? !0 : !1
}, ZohoDeskEditor.showOverlay = function() {
    "use strict";
    var a;
    if (document.getElementById("KB_Editor_Overlay")) return;
    a = document.createElement("div"), a.id = "KB_Editor_Overlay", a.className = "KB_Editor_Overlay", document.body.appendChild(a)
}, ZohoDeskEditor.hideOverlay = function() {
    "use strict";
    var a = document.getElementById("KB_Editor_Overlay");
    a.parentNode.removeChild(a)
}, ZohoDeskEditor.trim = function(a) {
    return "use strict", a = a.replace(/^\s*(.*)/, "$1"), a = a.replace(/(.*?)\s*$/, "$1"), a
}, ZohoDeskEditor.prototype.getFormattingValues = function(a) {
    "use strict";
    var b = this,
        c;
    b.win.getSelection ? c = b.win.getSelection() : b.doc.selection && b.doc.selection.type !== "Control" && (c = b.doc.selection);
    var d = c.anchorNode,
        e;
    while (d != null) {
        if (d.className && d.className === a) {
            switch (a) {
                case "size":
                    e = d.style.fontSize;
                    break;
                case "highlight":
                    e = d.style.backgroundColor
            }
            break
        }
        d = d.parentNode
    }
    return e
}, ZohoDeskEditor.prototype.extend = function(a, b) {
    "use strict";
    var c, d;
    for (c in b) d = b[c], d !== undefined && (a[c] = d);
    return a
}, ZohoDeskEditor.prototype.saveCursorPosition = function(a) {
    "use strict";
    var b = this,
        c = b.win,
        d = b.doc,
        e;
    if (c.getSelection && d.createRange) {
        var f = b.win.getSelection();
        if (f.rangeCount > 0) {
            var g = b.win.getSelection().getRangeAt(0),
                h = g.cloneRange();
            return h.selectNodeContents(a), h.setEnd(g.startContainer, g.startOffset), e = h.toString().length, {
                start: e,
                end: e + g.toString().length
            }
        }
        return {
            start: 0,
            end: 0
        }
    }
    if (d.selection) {
        var i = d.selection.createRange(),
            j = d.body.createTextRange();
        return j.moveToElementText(a), j.setEndPoint("EndToStart", i), e = j.text.length, {
            start: e,
            end: e + i.text.length
        }
    }
}, ZohoDeskEditor.prototype.restoreCursorPosition = function(a, b) {
    "use strict";
    var c = this,
        d = c.win,
        e = c.doc,
        f = !1;
    if (d.getSelection && e.createRange) {
        var g = 0,
            h = c.doc.createRange();
        h.setStart(a, 0), h.collapse(!0), b.start == 0 && b.end == 0 && (f = !0);
        var i = [a],
            j, k = !1,
            l = !1;
        if (!f)
            while (!l && (j = i.pop()))
                if (j.nodeType === 3) {
                    var m = g + j.length;
                    !k && b.start >= g && b.start <= m && (h.setStart(j, b.start - g), k = !0), k && b.end >= g && b.end <= m && (h.setEnd(j, b.end - g), l = !0), g = m
                } else {
                    var n = j.childNodes.length;
                    while (n--) i.push(j.childNodes[n])
                }
        var o = c.win.getSelection();
        o.removeAllRanges(), o.addRange(h)
    } else if (e.selection) {
        var p = e.body.createTextRange();
        p.moveToElementText(a), p.collapse(!0), p.moveEnd("character", b.end), p.moveStart("character", b.start), p.select()
    }
}, ZohoDeskEditor.prototype.saveCurrentState = function(a) {
    "use strict";
    var b = this,
        c = b.doc,
        d;
    a = a || {}, d = a.cursorPosition, b.stack && (d ? b.stack.execute(new b.EditorState(c.body, b.getContent(), d)) : b.stack.execute(new b.EditorState(c.body, b.getContent(), b.saveCursorPosition(c.body))), b.initobj.contentChanged && typeof b.initobj.contentChanged == "function" && !a.suppressContentChange && b.initobj.contentChanged())
}, ZohoDeskEditor.prototype.getPosFromCursor = function(a, b) {
    "use strict";
    var c = this,
        d = c.squireInstance.getPath(),
        e = [],
        f = b ? b : 0;
    d.length > 0 && (e = d.split(">"));
    var g, h = -1;
    for (g = e.length - 1; g >= 0; g--)
        if (e[g] === a) {
            if (f === 0) {
                h = g;
                break
            }
            f -= 1
        }
    return h
}, ZohoDeskEditor.prototype.fontsizeConversion = function(a, b) {
    "use strict";
    var c = {
            8: "10",
            10: "13",
            12: "16",
            14: "18",
            18: "24",
            24: "32",
            36: "48"
        },
        d = Math.round(b * .75),
        e = {
            1: "8",
            2: "10",
            3: "12",
            4: "14",
            5: "18",
            6: "24",
            7: "36"
        },
        f = {
            1: "10",
            2: "13",
            3: "16",
            4: "18",
            5: "24",
            6: "32",
            7: "48"
        },
        g = {
            1: "0.625",
            2: "0.813",
            3: "1",
            4: "1.125",
            5: "1.5",
            6: "2",
            7: "3",
            8: "4"
        };
    if (a === "pttopx") return c[b];
    if (a === "pxtopt") return d;
    if (a === "fontvaltopt") return e[b];
    if (a === "fontvaltopx") return f[b];
    if (a === "pttoem") return ptToEm[b];
    if (a === "fontvalToEm") return g[b]
}, ZohoDeskEditor.tabHandler = function(a, b, c) {
    "use strict",
    ZohoDeskEditor_Init.tabKeyHandling && (a.preventDefault(), !c.queryCommandState("insertOrderedList") && !c.queryCommandState("insertUnOrderedList") && (b.getSelection().collapseToStart(), c.execCommand("inserthtml", !1, "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;")))
}, ZohoDeskEditor.fsDisp = {
    1: "8",
    2: "10",
    3: "12",
    4: "14",
    5: "18",
    6: "24",
    7: "36"
}, ZohoDeskEditor.ffDisp = {
    arial: "Arial",
    "comic sans ms": "Comic Sans MS",
    verdana: "Verdana",
    georgia: "Georgia",
    tahoma: "Tahoma",
    calibri: "Calibri",
    "courier new": "Courier New",
    serif: "Serif",
    "arial narrow": "Narrow",
    "arial black": "Wide",
    "times new roman": "Times New Roman",
    garamond: "Garamond",
    batang: "Serif",
    "trebuchet ms": "Trebuchet"
};
var ze_Undo = function() {
    var a = {
        Stack: function() {
            this.commands = [], this.stackPosition = -1, this.lastSavedState = "", this.execute = function(a) {
                if (this.lastSavedState == a.newValue) return;
                this.lastSavedState = a.newValue, this.clearRedo(), this.stackPosition + 1 > 100 && (this.commands.splice(0, 1), this.stackPosition -= 1), this.commands.push(a), this.stackPosition++
            }, this.clearStack = function() {
                this.stackPosition = -1, this.commands.splice(0, this.commands.length), this.lastSavedState = ""
            }, this.undo = function() {
                this.stackPosition > 0 && (this.stackPosition--, this.commands[this.stackPosition].undo(), this.commands[this.stackPosition].setFocus(), this.lastSavedState = this.commands[this.stackPosition].newValue)
            }, this.canUndo = function() {
                return this.stackPosition > 0
            }, this.redo = function() {
                this.stackPosition++, this.commands[this.stackPosition].redo(), this.lastSavedState = this.commands[this.stackPosition].newValue, this.commands[this.stackPosition].setFocus()
            }, this.canRedo = function() {
                return this.stackPosition < this.commands.length - 1
            }, this.clearRedo = function() {
                this.commands = this.commands.slice(0, this.stackPosition + 1)
            }
        }
    };
    return a
}();
(function(a, b) {
    function L(a, b, c) {
        this.root = this.currentNode = a, this.nodeType = b, this.filter = c
    }

    function O(a, b) {
        var c = a.length;
        while (c--)
            if (!b(a[c])) return !1;
        return !0
    }

    function P(a) {
        return a.nodeType === d && !!N[a.nodeName]
    }

    function Q(a) {
        return M.test(a.nodeName)
    }

    function R(a) {
        var b = a.nodeType;
        return (b === d || b === g) && !Q(a) && O(a.childNodes, Q)
    }

    function S(a) {
        var b = a.nodeType;
        return (b === d || b === g) && !Q(a) && !R(a)
    }

    function T(a, b) {
        var c = new L(b, h, R);
        return c.currentNode = a, c
    }

    function U(a, b) {
        return a = T(a, b).previousNode(), a !== b ? a : null
    }

    function V(a, b) {
        return a = T(a, b).nextNode(), a !== b ? a : null
    }

    function W(a, b) {
        return !P(a) && a.nodeType === b.nodeType && a.nodeName === b.nodeName && a.nodeName !== "A" && a.className === b.className && (!a.style && !b.style || a.style.cssText === b.style.cssText)
    }

    function X(a, b, c) {
        if (a.nodeName !== b) return !1;
        for (var d in c)
            if (a.getAttribute(d) !== c[d]) return !1;
        return !0
    }

    function Y(a, b, c, d) {
        while (a && a !== b) {
            if (X(a, c, d)) return a;
            a = a.parentNode
        }
        return null
    }

    function Z(a, b) {
        while (b) {
            if (b === a) return !0;
            b = b.parentNode
        }
        return !1
    }

    function $(a, b) {
        var c = "",
            e, f, g, h;
        if (a && a !== b) {
            c = $(a.parentNode, b);
            if (a.nodeType === d) {
                c += (c ? ">" : "") + a.nodeName;
                if (e = a.id) c += "#" + e;
                if (f = a.className.trim()) g = f.split(/\s\s*/), g.sort(), c += ".", c += g.join(".");
                if (h = a.dir) c += "[dir=" + h + "]";
                g && (J.call(g, n) > -1 && (c += "[backgroundColor=" + a.style.backgroundColor.replace(/ /g, "") + "]"), J.call(g, o) > -1 && (c += "[color=" + a.style.color.replace(/ /g, "") + "]"), J.call(g, p) > -1 && (c += "[fontFamily=" + a.style.fontFamily.replace(/ /g, "") + "]"), J.call(g, q) > -1 && (c += "[fontSize=" + a.style.fontSize + "]"))
            }
        }
        return c
    }

    function _(a) {
        var b = a.nodeType;
        return b === d ? a.childNodes.length : a.length || 0
    }

    function ba(a) {
        var b = a.parentNode;
        return b && b.removeChild(a), a
    }

    function bb(a, b) {
        var c = a.parentNode;
        c && c.replaceChild(b, a)
    }

    function bc(a) {
        var b = a.ownerDocument.createDocumentFragment(),
            c = a.childNodes,
            d = c ? c.length : 0;
        while (d--) b.appendChild(a.firstChild);
        return b
    }

    function bd(a, c, d, e) {
        var f = a.createElement(c),
            g, h, i, j;
        d instanceof Array && (e = d, d = null);
        if (d)
            for (g in d) h = d[g], h !== b && f.setAttribute(g, d[g]);
        if (e)
            for (i = 0, j = e.length; i < j; i += 1) f.appendChild(e[i]);
        return f
    }

    function be(a, b) {
        var c = a.ownerDocument,
            d = a,
            f, g;
        a === b && (!(g = a.firstChild) || g.nodeName === "BR") && (f = bZ(c).createDefaultBlock(), g ? a.replaceChild(f, g) : a.appendChild(f), a = f, f = null);
        if (a.nodeType === e) return d;
        if (Q(a)) {
            g = a.firstChild;
            while (F && g && g.nodeType === e && !g.data) a.removeChild(g), g = a.firstChild;
            g || (F ? (f = c.createTextNode(r), bZ(c)._didAddZWS()) : f = c.createTextNode(""))
        } else if (E) {
            while (a.nodeType !== e && !P(a)) {
                g = a.firstChild;
                if (!g) {
                    f = c.createTextNode("");
                    break
                }
                a = g
            }
            a.nodeType === e ? /^ +$/.test(a.data) && (a.data = "") : P(a) && a.parentNode.insertBefore(c.createTextNode(""), a)
        } else if (!a.querySelector("BR")) {
            f = bd(c, "BR");
            while ((g = a.lastElementChild) && !Q(g)) a = g
        }
        if (f) try {
            a.appendChild(f)
        } catch (h) {
            bZ(c).didError({
                name: "Squire: fixCursor – " + h,
                message: "Parent: " + a.nodeName + "/" + a.innerHTML + " appendChild: " + f.nodeName
            })
        }
        return d
    }

    function bf(a, b) {
        var c = a.childNodes,
            d = a.ownerDocument,
            e = null,
            f, g, h, i, j = bZ(d)._config;
        for (f = 0, g = c.length; f < g; f += 1) {
            h = c[f], i = h.nodeName === "BR";
            if (!i && Q(h)) e || (e = bd(d, j.blockTag, j.blockAttributes)), e.appendChild(h), f -= 1, g -= 1;
            else if (i || e) e || (e = bd(d, j.blockTag, j.blockAttributes)), be(e, b), i ? a.replaceChild(e, h) : (a.insertBefore(e, h), f += 1, g += 1), e = null;
            S(h) && bf(h, b)
        }
        return e && a.appendChild(be(e, b)), a
    }

    function bg(a, b, c, f) {
        var g = a.nodeType,
            h, i, j;
        if (g === e && a !== c) return bg(a.parentNode, a.splitText(b), c, f);
        if (g === d) {
            typeof b == "number" && (b = b < a.childNodes.length ? a.childNodes[b] : null);
            if (a === c) return b;
            h = a.parentNode, i = a.cloneNode(!1);
            while (b) j = b.nextSibling, i.appendChild(b), b = j;
            return a.nodeName === "OL" && Y(a, f, "BLOCKQUOTE") && (i.start = (+a.start || 1) + a.childNodes.length - 1), be(a, f), be(i, f), (j = a.nextSibling) ? h.insertBefore(i, j) : h.appendChild(i), bg(h, i, c, f)
        }
        return b
    }

    function bh(a, b) {
        var c = a.childNodes,
            f = c.length,
            g = [],
            h, i, j;
        while (f--) {
            h = c[f], i = f && c[f - 1];
            if (f && Q(h) && W(h, i) && !N[h.nodeName]) b.startContainer === h && (b.startContainer = i, b.startOffset += _(i)), b.endContainer === h && (b.endContainer = i, b.endOffset += _(i)), b.startContainer === a && (b.startOffset > f ? b.startOffset -= 1 : b.startOffset === f && (b.startContainer = i, b.startOffset = _(i))), b.endContainer === a && (b.endOffset > f ? b.endOffset -= 1 : b.endOffset === f && (b.endContainer = i, b.endOffset = _(i))), ba(h), h.nodeType === e ? i.appendData(h.data) : g.push(bc(h));
            else if (h.nodeType === d) {
                j = g.length;
                while (j--) h.appendChild(g.pop());
                bh(h, b)
            }
        }
    }

    function bi(a, b) {
        a.nodeType === e && (a = a.parentNode);
        if (a.nodeType === d) {
            var c = {
                startContainer: b.startContainer,
                startOffset: b.startOffset,
                endContainer: b.endContainer,
                endOffset: b.endOffset
            };
            bh(a, c), b.setStart(c.startContainer, c.startOffset), b.setEnd(c.endContainer, c.endOffset)
        }
    }

    function bj(a, b, c) {
        var d = b,
            e, f;
        while (d.parentNode.childNodes.length === 1) d = d.parentNode;
        if (d.nodeName == "TD") return;
        ba(d), f = a.childNodes.length, e = a.lastChild, e && e.nodeName === "BR" && (a.removeChild(e), f -= 1), a.appendChild(bc(b)), c.setStart(a, f), c.collapse(!0), bi(a, c), z && (e = a.lastChild) && e.nodeName === "BR" && a.removeChild(e)
    }

    function bk(a, b) {
        var c = a.previousSibling,
            d = a.firstChild,
            e = a.ownerDocument,
            f = a.nodeName === "LI",
            g, h;
        if (f && (!d || !/^[OU]L$/.test(d.nodeName))) return;
        if (c && W(c, a)) {
            if (!S(c)) {
                if (!f) return;
                h = bd(e, "DIV"), h.appendChild(bc(c)), c.appendChild(h)
            }
            ba(a), g = !S(a), c.appendChild(bc(a)), g && bf(c, b), d && bk(d, b)
        } else f && (c = bd(e, "DIV"), a.insertBefore(c, d), be(c, b))
    }

    function bV(a) {
        this.isShiftDown = a.shiftKey
    }

    function bZ(a) {
        var b = bY.length,
            c;
        while (b--) {
            c = bY[b];
            if (c._doc === a) return c
        }
        return null
    }

    function b$(a, b, c) {
        var d, e;
        a || (a = {});
        if (b)
            for (d in b)
                if (c || !(d in a)) e = b[d], a[d] = e && e.constructor === Object ? b$(a[d], e, c) : e;
        return a
    }

    function b_(a, b) {
        a.nodeType === f && (a = a.body);
        var c = a.ownerDocument,
            d = c.defaultView,
            e;
        this._win = d, this._doc = c, this._root = a, this._events = {}, b && b.getEditorInstance && (this._editorRef = b.getEditorInstance), this._isFocused = !1, this._lastSelection = null, G && this.addEventListener("beforedeactivate", this.getSelection), this._hasZWS = !1, this._lastAnchorNode = null, this._lastFocusNode = null, this._path = "", this._willUpdatePath = !1, "onselectionchange" in c ? this.addEventListener("selectionchange", this._updatePathOnEvent) : (this.addEventListener("keyup", this._updatePathOnEvent), this.addEventListener("mouseup", this._updatePathOnEvent)), this._undoIndex = -1, this._undoStack = [], this._undoStackLength = 0, this._isInUndoState = !1, this._ignoreChange = !1, this._ignoreAllChanges = !1, H ? (e = new MutationObserver(this._docWasChanged.bind(this)), e.observe(a, {
            childList: !0,
            attributes: !0,
            characterData: !0,
            subtree: !0
        }), this._mutation = e) : this.addEventListener("keyup", this._keyUpDetectChange), this._restoreSelection = !1, this.addEventListener("blur", cd), this.addEventListener("mousedown", ce), this.addEventListener("touchstart", ce), this.addEventListener("focus", cf), this._awaitingPaste = !1, this.addEventListener(y ? "beforecut" : "cut", bT), this.addEventListener("copy", bU), this.addEventListener("keydown", bV), this.addEventListener("keyup", bV), this.addEventListener(y ? "beforepaste" : "paste", bW), this.addEventListener("drop", bX), this.addEventListener(z ? "keypress" : "keydown", bB), this._keyHandlers = Object.create(bF), this.setConfig(b && b.config), y && (d.Text.prototype.splitText = function(a) {
            var b = this.ownerDocument.createTextNode(this.data.slice(a)),
                c = this.nextSibling,
                d = this.parentNode,
                e = this.length - a;
            return c ? d.insertBefore(b, c) : d.appendChild(b), e && this.deleteData(a, e), b
        }), a.setAttribute("contenteditable", "true");
        try {
            c.execCommand("enableObjectResizing", !1, "false"), c.execCommand("enableInlineTableEditing", !1, "false")
        } catch (g) {}
        bY.push(this)
    }

    function cd() {
        this._restoreSelection = !0
    }

    function ce() {
        this._restoreSelection = !1
    }

    function cf() {
        this._restoreSelection && this.setSelection(this._lastSelection)
    }

    function cz(a, b, c) {
        var d, f, g = document.createDocumentFragment();
        for (d = b.firstChild; d; d = f) {
            f = d.nextSibling;
            if (Q(d)) {
                if (d.nodeType === e || d.nodeName === "BR" || d.nodeName === "IMG") {
                    c.appendChild(d);
                    continue
                }
            } else {
                if (R(d)) {
                    c.appendChild(a.createDefaultBlock([cz(a, d, a._doc.createDocumentFragment())]));
                    continue
                }(d.nodeName === "TABLE" || d.nodeName === "TR" || d.nodeName === "TD" || d.nodeName === "TBODY") && c.appendChild(cz(a, d, g))
            }
            cz(a, d, c)
        }
        return c
    }
    "use strict";
    var c = 2,
        d = 1,
        e = 3,
        f = 9,
        g = 11,
        h = 1,
        i = 4,
        j = 0,
        k = 1,
        l = 2,
        m = 3,
        n = "highlight",
        o = "colour",
        p = "font",
        q = "size",
        r = "​",
        s = a.defaultView,
        t = navigator.userAgent,
        u = /iP(?:ad|hone|od)/.test(t),
        v = /Mac OS X/.test(t),
        w = /Android/.test(t),
        x = /Gecko\//.test(t),
        y = /Trident\/[456]\./.test(t),
        z = !!s.opera,
        A = /Edge\//.test(t),
        B = !A && /WebKit\//.test(t),
        C = /Trident\/[4567]\./.test(t),
        D = v ? "meta-" : "ctrl-",
        E = y || z,
        F = y || B,
        G = y,
        H = typeof MutationObserver != "undefined",
        I = /[^ \t\r\n]/,
        J = Array.prototype.indexOf;
    Object.create || (Object.create = function(a) {
        var b = function() {};
        return b.prototype = a, new b
    });
    var K = {
        1: 1,
        2: 2,
        3: 4,
        8: 128,
        9: 256,
        11: 1024
    };
    L.prototype.nextNode = function() {
        var a = this.currentNode,
            b = this.root,
            c = this.nodeType,
            d = this.filter,
            e;
        for (;;) {
            e = a.firstChild;
            while (!e && a) {
                if (a === b) break;
                e = a.nextSibling, e || (a = a.parentNode)
            }
            if (!e) return null;
            if (K[e.nodeType] & c && d(e)) return this.currentNode = e, e;
            a = e
        }
    }, L.prototype.previousNode = function() {
        var a = this.currentNode,
            b = this.root,
            c = this.nodeType,
            d = this.filter,
            e;
        for (;;) {
            if (a === b) return null;
            e = a.previousSibling;
            if (e)
                while (a = e.lastChild) e = a;
            else e = a.parentNode;
            if (!e) return null;
            if (K[e.nodeType] & c && d(e)) return this.currentNode = e, e;
            a = e
        }
    }, L.prototype.previousPONode = function() {
        var a = this.currentNode,
            b = this.root,
            c = this.nodeType,
            d = this.filter,
            e;
        for (;;) {
            e = a.lastChild;
            while (!e && a) {
                if (a === b) break;
                e = a.previousSibling, e || (a = a.parentNode)
            }
            if (!e) return null;
            if (K[e.nodeType] & c && d(e)) return this.currentNode = e, e;
            a = e
        }
    };
    var M = /^(?:#text|A(?:BBR|CRONYM)?|B(?:R|D[IO])?|C(?:ITE|ODE)|D(?:ATA|EL|FN)|EM|FONT|HR|I(?:FRAME|MG|NPUT|NS)?|KBD|Q|R(?:P|T|UBY)|S(?:AMP|MALL|PAN|TR(?:IKE|ONG)|U[BP])?|U|VAR|WBR)$/,
        N = {
            BR: 1,
            HR: 1,
            IFRAME: 1,
            IMG: 1,
            INPUT: 1
        },
        bl = function(a, b) {
            var c = a.childNodes;
            while (b && a.nodeType === d) a = c[b - 1], c = a.childNodes, b = c.length;
            return a
        },
        bm = function(a, b) {
            if (a.nodeType === d) {
                var c = a.childNodes;
                if (b < c.length) a = c[b];
                else {
                    while (a && !a.nextSibling) a = a.parentNode;
                    a && (a = a.nextSibling)
                }
            }
            return a
        },
        bn = function(a, b) {
            var c = a.startContainer,
                d = a.startOffset,
                f = a.endContainer,
                g = a.endOffset,
                h, i, j, k;
            c.nodeType === e ? (h = c.parentNode, i = h.childNodes, d === c.length ? (d = J.call(i, c) + 1, a.collapsed && (f = h, g = d)) : (d && (k = c.splitText(d), f === c ? (g -= d, f = k) : f === h && (g += 1), c = k), d = J.call(i, c)), c = h) : i = c.childNodes, j = i.length, d === j ? c.appendChild(b) : c.insertBefore(b, i[d]), c === f && (g += i.length - j), a.setStart(c, d), a.setEnd(f, g)
        },
        bo = function(a, b, c) {
            var d = a.startContainer,
                f = a.startOffset,
                g = a.endContainer,
                h = a.endOffset;
            b || (b = a.commonAncestorContainer), b.nodeType === e && (b = b.parentNode);
            var i = bg(g, h, b, c),
                j = bg(d, f, b, c),
                k = b.ownerDocument.createDocumentFragment(),
                l, m, n;
            while (j !== i) l = j.nextSibling, k.appendChild(j), j = l;
            return d = b, f = i ? J.call(b.childNodes, i) : b.childNodes.length, n = b.childNodes[f], m = n && n.previousSibling, m && m.nodeType === e && n.nodeType === e && (d = m, f = m.length, m.appendData(n.data), ba(n)), a.setStart(d, f), a.collapse(!0), be(b, c), k
        },
        bp = function(a, b) {
            bt(a);
            var c = a.startContainer,
                d = a.endContainer,
                e = (Q(c) || R(c)) && (Q(d) || R(d)),
                f = bo(a, null, b);
            bs(a), c = bu(a, b), e && (d = bv(a, b), c && d && c !== d && bj(c, d, a)), c && be(c, b);
            var g = b.firstChild;
            return !g || g.nodeName === "BR" ? (be(b, b), a.selectNodeContents(b.firstChild)) : a.collapse(!1), f
        },
        bq = function(a, b, c) {
            var e = !0,
                f = b.childNodes,
                g = f.length;
            while (g--)
                if (!Q(f[g])) {
                    e = !1;
                    break
                }
            a.collapsed || bp(a, c), bs(a);
            if (e) bn(a, b), a.startContainer !== a.endContainer && bi(a.endContainer, a), bi(a.startContainer, a), a.collapse(!1);
            else {
                var h = a.startContainer,
                    i = bg(h, a.startOffset, Y(h.parentNode, c, "BLOCKQUOTE") || Y(h.parentNode, c, "TD") || c, c),
                    j = i.previousSibling,
                    k = j,
                    l = k.childNodes.length,
                    m = i,
                    n = 0,
                    o = i.parentNode,
                    p, q, r, s, t;
                while ((p = k.lastChild) && p.nodeType === d) {
                    if (p.nodeName === "BR") {
                        l -= 1;
                        break
                    }
                    k = p, l = k.childNodes.length
                }
                while ((p = m.firstChild) && p.nodeType === d && p.nodeName !== "BR") m = p;
                t = k.childNodes[l] || null;
                while ((p = b.firstChild) && Q(p)) k.insertBefore(p, t);
                while ((p = b.lastChild) && Q(p)) m.insertBefore(p, m.firstChild), n += 1;
                q = b;
                while (q = V(q, c)) be(q, c);
                o.insertBefore(b, i), s = j.nextSibling, q = U(s, c);
                if (q && !/\S/.test(q.textContent))
                    do o = q.parentNode, o.removeChild(q), q = o; while (q && !q.lastChild && q !== c);
                j.parentNode || (j = s.previousSibling), k.parentNode || (k = j || s.parentNode, l = j ? j.childNodes.length : 0), S(s) && bk(s, c), r = i.previousSibling, q = R(i) ? i : V(i, c);
                if (q && !/\S/.test(q.textContent))
                    do o = q.parentNode, o.removeChild(q), q = o; while (q && !q.lastChild && q !== c);
                i.parentNode || (i = r.nextSibling), n || (m = r, n = r.childNodes.length), i && S(i) && bk(i, c), a.setStart(k, l), a.setEnd(m, n), bs(a)
            }
        },
        br = function(a, b, c) {
            var d = b.ownerDocument.createRange();
            d.selectNode(b);
            if (c) {
                var e = a.compareBoundaryPoints(m, d) > -1,
                    f = a.compareBoundaryPoints(k, d) < 1;
                return !e && !f
            }
            var g = a.compareBoundaryPoints(j, d) < 1,
                h = a.compareBoundaryPoints(l, d) > -1;
            return g && h
        },
        bs = function(a) {
            var b = a.startContainer,
                c = a.startOffset,
                d = a.endContainer,
                f = a.endOffset,
                g;
            while (b.nodeType !== e) {
                g = b.childNodes[c];
                if (!g || P(g)) break;
                b = g, c = 0
            }
            if (f)
                while (d.nodeType !== e) {
                    g = d.childNodes[f - 1];
                    if (!g || P(g)) break;
                    d = g, f = _(d)
                } else
                    while (d.nodeType !== e) {
                        g = d.firstChild;
                        if (!g || P(g)) break;
                        d = g
                    }
            a.collapsed ? (a.setStart(d, f), a.setEnd(b, c)) : (a.setStart(b, c), a.setEnd(d, f))
        },
        bt = function(a, b) {
            var c = a.startContainer,
                d = a.startOffset,
                e = a.endContainer,
                f = a.endOffset,
                g;
            b || (b = a.commonAncestorContainer);
            while (c !== b && !d) g = c.parentNode, d = J.call(g.childNodes, c), c = g;
            while (e !== b && f === _(e)) g = e.parentNode, f = J.call(g.childNodes, e) + 1, e = g;
            a.setStart(c, d), a.setEnd(e, f)
        },
        bu = function(a, b) {
            var c = a.startContainer,
                d;
            return Q(c) ? d = U(c, b) : c !== b && R(c) ? d = c : (d = bl(c, a.startOffset), d = V(d, b)), d && br(a, d, !0) ? d : null
        },
        bv = function(a, b) {
            var c = a.endContainer,
                d, e;
            if (Q(c)) d = U(c, b);
            else if (c !== b && R(c)) d = c;
            else {
                d = bm(c, a.endOffset);
                if (!d || !Z(b, d)) {
                    d = b;
                    while (e = d.lastChild) d = e
                }
                d = U(d, b)
            }
            return d && br(a, d, !0) ? d : null
        },
        bw = new L(null, i | h, function(a) {
            return a.nodeType === e ? I.test(a.data) : a.nodeName === "IMG" || a.nodeName === "INPUT"
        }),
        bx = function(a, b) {
            var c = a.startContainer,
                d = a.startOffset,
                f;
            bw.root = null;
            if (c.nodeType === e) {
                if (d) return !1;
                f = c
            } else {
                f = bm(c, d), f && !Z(b, f) && (f = null);
                if (!f) {
                    f = bl(c, d);
                    if (f.nodeType === e && f.length) return !1
                }
            }
            return bw.currentNode = f, bw.root = bu(a, b), !bw.previousNode()
        },
        by = function(a, b) {
            var c = a.endContainer,
                d = a.endOffset,
                f;
            bw.root = null;
            if (c.nodeType === e) {
                f = c.data.length;
                if (f && d < f) return !1;
                bw.currentNode = c
            } else bw.currentNode = bl(c, d);
            return bw.root = bv(a, b), !bw.nextNode()
        },
        bz = function(a, b) {
            var c = bu(a, b),
                d = bv(a, b),
                e;
            c && d && (e = c.parentNode, a.setStart(e, J.call(e.childNodes, c)), e = d.parentNode, a.setEnd(e, J.call(e.childNodes, d) + 1))
        },
        bA = {
            8: "backspace",
            9: "tab",
            13: "enter",
            32: "space",
            33: "pageup",
            34: "pagedown",
            37: "left",
            39: "right",
            46: "delete",
            219: "[",
            221: "]"
        },
        bB = function(a) {
            var b = a.keyCode,
                c = bA[b],
                d = "",
                e = this.getSelection();
            if (a.defaultPrevented) return;
            c || (c = String.fromCharCode(b).toLowerCase(), /^[A-Za-z0-9]$/.test(c) || (c = "")), z && a.which === 46 && (c = "."), 111 < b && b < 124 && (c = "f" + (b - 111)), c !== "backspace" && c !== "delete" && (a.altKey && (d += "alt-"), a.ctrlKey && (d += "ctrl-"), a.metaKey && (d += "meta-")), a.shiftKey && (d += "shift-"), c = d + c, this._keyHandlers[c] ? this._keyHandlers[c](this, a, e) : c.length === 1 && !e.collapsed && (this.saveUndoState(e), bp(e, this._root), this._ensureBottomLine(), this.setSelection(e), this._updatePath(e, !0))
        },
        bC = function(a) {
            return function(b, c) {
                c.preventDefault(), b[a]()
            }
        },
        bD = function(a, b) {
            return b = b || null,
                function(c, d) {
                    d.preventDefault();
                    var e = c.getSelection();
                    c.hasFormat(a, null, e) ? c.changeFormat(null, {
                        tag: a
                    }, e) : c.changeFormat({
                        tag: a
                    }, b, e)
                }
        },
        bE = function(a, b) {
            try {
                b || (b = a.getSelection());
                var c = b.startContainer,
                    d;
                c.nodeType === e && (c = c.parentNode), d = c;
                while (Q(d) && (!d.textContent || d.textContent === r) && d.getElementsByTagName("img").length == 0) c = d, d = c.parentNode;
                c !== d && (b.setStart(d, J.call(d.childNodes, c)), b.collapse(!0), d.removeChild(c), R(d) || (d = U(d, a._root)), be(d, a._root), bs(b)), c === a._root && (c = c.firstChild) && c.nodeName === "BR" && ba(c), a._ensureBottomLine(), a.setSelection(b), a._updatePath(b, !0)
            } catch (f) {
                a.didError(f)
            }
        },
        bF = {
            enter: function(a, b, c) {
                var f = a._root,
                    g, h, i, j;
                b.preventDefault();
                var k = a._editorRef().initobj;
                if (typeof k.isEnterKeyHandler == "function") {
                    var l = k.isEnterKeyHandler();
                    if (l === !0) return !0
                }
                j = document.getElementById("ze_autofill");
                if (j && j.getElementsByClassName("sel").length) return !0;
                a._recordUndoState(c), cv(c.startContainer, f, a), a._removeZWS(), a._getRangeAndRemoveBookmark(c), c.collapsed || bp(c, f), g = bu(c, f);
                if (!g || /^T[HD]$/.test(g.nodeName)) {
                    bn(c, a.createElement("BR")), c.collapse(!1), a.setSelection(c), a._updatePath(c, !0);
                    return
                }
                if (h = Y(g, f, "LI")) g = h;
                if (!g.textContent) {
                    if (Y(g, f, "UL") || Y(g, f, "OL")) return a.modifyBlocks(ct, c);
                    if (Y(g, f, "BLOCKQUOTE")) return a.modifyBlocks(cn, c)
                }
                i = ck(a, g, c.startContainer, c.startOffset), cg(g), bP(g), be(g, f);
                while (i.nodeType === d) {
                    var m = i.firstChild,
                        n;
                    if (i.nodeName === "A" && (!i.textContent || i.textContent === r) && i.getElementsByTagName("img").length == 0) {
                        m = a._doc.createTextNode(""), bb(i, m), i = m;
                        break
                    }
                    while (m && m.nodeType === e && !m.data) {
                        n = m.nextSibling;
                        if (!n || n.nodeName === "BR") break;
                        ba(m), m = n
                    }
                    if (!m || m.nodeName === "BR" || m.nodeType === e && !z) break;
                    i = m
                }
                c = a._createRange(i, 0), a.setSelection(c), a._updatePath(c, !0), i.nodeType === e && (i = i.parentNode);
                if (i.getBoundingClientRect().top > a._editorRef().iframe.offsetHeight) {
                    i.scrollIntoView(!1);
                    var o = a._editorRef();
                    if (o.needScrollView) {
                        var p = navigator.userAgent,
                            q = p.indexOf("Firefox") != -1 || p.indexOf("MSIE") != -1 || !!document.documentMode == 1 ? document.documentElement : document.body;
                        q.scrollTop = o.toolbardiv.getBoundingClientRect().top
                    }
                }
            },
            backspace: function(a, b, c) {
                var d = a._root;
                a._removeZWS(), a.saveUndoState(c);
                if (!c.collapsed) b.preventDefault(), bp(c, d), bE(a, c);
                else if (bx(c, d)) {
                    b.preventDefault();
                    var e = bu(c, d),
                        f;
                    if (!e) return;
                    bf(e.parentNode, d), f = U(e, d);
                    var g = f && Y(f, d, "TABLE", {
                        contenteditable: "false"
                    });
                    g && (f = g);
                    if (f) {
                        if (!f.isContentEditable) {
                            ba(f);
                            return
                        }
                        bj(f, e, c), e = f.parentNode;
                        while (e !== d && !e.nextSibling) e = e.parentNode;
                        e !== d && e.nodeName != "TD" && e.nodeName != "TR" && (e = e.nextSibling) && bk(e, d), a.setSelection(c)
                    } else if (e) {
                        if (Y(e, d, "UL") || Y(e, d, "OL")) return a.modifyBlocks(ct, c);
                        if (Y(e, d, "BLOCKQUOTE")) return a.modifyBlocks(cm, c);
                        a.setSelection(c), a._updatePath(c, !0)
                    }
                } else a.setSelection(c), setTimeout(function() {
                    bE(a)
                }, 0)
            },
            "delete": function(a, b, c) {
                var e = a._root,
                    f, g, h, i, j, k;
                a._removeZWS(), a.saveUndoState(c);
                if (!c.collapsed) b.preventDefault(), bp(c, e), bE(a, c);
                else if (by(c, e)) {
                    b.preventDefault(), f = bu(c, e);
                    if (!f) return;
                    bf(f.parentNode, e), g = V(f, e);
                    if (g) {
                        if (!g.isContentEditable) {
                            if (!g.hasAttribute("resizeDiv")) return;
                            ba(g);
                            return
                        }
                        bj(f, g, c), g = f.parentNode;
                        while (g !== e && !g.nextSibling) g = g.parentNode;
                        g !== e && (g = g.nextSibling) && bk(g, e), a.setSelection(c), a._updatePath(c, !0)
                    }
                } else {
                    h = c.cloneRange(), bt(c, a._root), i = c.endContainer, j = c.endOffset;
                    if (i.nodeType === d) {
                        k = i.childNodes[j];
                        if (k && k.nodeName === "IMG") {
                            b.preventDefault(), ba(k), bs(c), bE(a, c);
                            return
                        }
                    }
                    a.setSelection(h), setTimeout(function() {
                        bE(a)
                    }, 0)
                }
            },
            tab: function(a, b, c) {
                var d = a._root,
                    e, f;
                a._removeZWS();
                var g = !1;
                if (c.collapsed && bx(c, d)) {
                    e = bu(c, d);
                    while (f = e.parentNode) {
                        if (f.nodeName === "UL" || f.nodeName === "OL") {
                            e.previousSibling && (b.preventDefault(), a.modifyBlocks(cs, c)), g = !0;
                            break
                        }
                        e = f
                    }
                }!g && window.ZohoDeskEditor && ZohoDeskEditor.tabHandler && ZohoDeskEditor.tabHandler(b, a._win, a._doc)
            },
            "shift-tab": function(a, b, c) {
                var d = a._root,
                    e;
                a._removeZWS();
                if (c.collapsed && bx(c, d)) {
                    e = c.startContainer;
                    if (Y(e, d, "UL") || Y(e, d, "OL")) b.preventDefault(), a.modifyBlocks(ct, c)
                }
            },
            space: function(a, b, c) {
                var d, e;
                a._recordUndoState(c), cv(c.startContainer, a._root, a), a._getRangeAndRemoveBookmark(c), d = c.endContainer, e = d.parentNode, c.collapsed && e.nodeName === "A" && !d.nextSibling && c.endOffset === _(d) ? c.setStartAfter(e) : c.collapsed || (bp(c, a._root), a._ensureBottomLine(), a.setSelection(c), a._updatePath(c, !0)), a.setSelection(c)
            },
            left: function(a) {
                a._removeZWS()
            },
            right: function(a) {
                a._removeZWS()
            }
        };
    v && x && (bF["meta-left"] = function(a, b) {
        b.preventDefault();
        var c = cc(a);
        c && c.modify && c.modify("move", "backward", "lineboundary")
    }, bF["meta-right"] = function(a, b) {
        b.preventDefault();
        var c = cc(a);
        c && c.modify && c.modify("move", "forward", "lineboundary")
    }), v || (bF.pageup = function(a) {
        a.moveCursorToStart()
    }, bF.pagedown = function(a) {
        a.moveCursorToEnd()
    });
    var bG = {
            1: 10,
            2: 13,
            3: 16,
            4: 18,
            5: 24,
            6: 32,
            7: 48
        },
        bH = {
            backgroundColor: {
                regexp: I,
                replace: function(a, b) {
                    return bd(a, "SPAN", {
                        "class": n,
                        style: "background-color:" + b
                    })
                }
            },
            color: {
                regexp: I,
                replace: function(a, b) {
                    return bd(a, "SPAN", {
                        "class": o,
                        style: "color:" + b
                    })
                }
            },
            fontWeight: {
                regexp: /^bold/i,
                replace: function(a) {
                    return bd(a, "B")
                }
            },
            fontStyle: {
                regexp: /^italic/i,
                replace: function(a) {
                    return bd(a, "I")
                }
            },
            fontFamily: {
                regexp: I,
                replace: function(a, b) {
                    return bd(a, "SPAN", {
                        "class": p,
                        style: "font-family:" + b
                    })
                }
            },
            fontSize: {
                regexp: I,
                replace: function(a, b) {
                    return bd(a, "SPAN", {
                        "class": q,
                        style: "font-size:" + b
                    })
                }
            },
            textDecoration: {
                regexp: /^underline/i,
                replace: function(a) {
                    return bd(a, "U")
                }
            }
        },
        bI = function(a) {
            return function(b, c) {
                var d = bd(b.ownerDocument, a);
                return c.replaceChild(d, b), d.appendChild(bc(b)), d
            }
        },
        bJ = function(a, b) {
            var c = a.style,
                d = a.ownerDocument,
                e, f, g, h, i, j;
            for (e in bH) f = bH[e], g = c[e], g && f.regexp.test(g) && (j = f.replace(d, g), i || (i = j), h && h.appendChild(j), h = j, a.style[e] = "");
            return i && (h.appendChild(bc(a)), a.nodeName === "SPAN" ? b.replaceChild(i, a) : a.appendChild(i)), h || a
        },
        bK = {
            P: bJ,
            SPAN: bJ,
            STRONG: bI("B"),
            EM: bI("I"),
            INS: bI("U"),
            STRIKE: bI("S"),
            FONT: function(a, b) {
                var c = a.face || a.style.fontFamily,
                    d = a.size,
                    e = a.color || a.style.color,
                    f = a.ownerDocument,
                    g, h, i, j, k;
                c && (g = bd(f, "SPAN", {
                    "class": "font",
                    style: "font-family:" + c
                }), k = g, j = g), d && (h = bd(f, "SPAN", {
                    "class": "size",
                    style: "font-size:" + bG[d] + "px"
                }), k || (k = h), j && j.appendChild(h), j = h);
                if (e)
                    if (/^#?([\dA-F]{3}){1,2}$/i.test(e)) e.charAt(0) !== "#" && (e = "#" + e), i = bd(f, "SPAN", {
                        "class": "colour",
                        style: "color:" + e
                    }), k || (k = i), j && j.appendChild(i), j = i;
                    else if (e.indexOf("rgb") > -1) {
                    e = e.replace(/rgb\(|\)/g, "").split(",");
                    var l = e.length;
                    for (var m = 0; m < l; m++) e[m] = parseInt(e[m], 10).toString(16), e[m] = e[m].length == 1 ? "0" + e[m] : e[m];
                    e = "#" + e.join(""), i = bd(f, "SPAN", {
                        "class": "colour",
                        style: "color:" + e
                    }), k || (k = i), j && j.appendChild(i), j = i
                }
                return k || (k = j = bd(f, "SPAN")), b.replaceChild(k, a), j.appendChild(bc(a)), j
            },
            TT: function(a, b) {
                var c = bd(a.ownerDocument, "SPAN", {
                    "class": "font",
                    style: 'font-family:menlo,consolas,"courier new",monospace'
                });
                return b.replaceChild(c, a), c.appendChild(bc(a)), c
            }
        },
        bL = /^(?:A(?:DDRESS|RTICLE|SIDE|UDIO)|BLOCKQUOTE|CAPTION|D(?:[DLT]|IV)|F(?:IGURE|IGCAPTION|OOTER)|H[1-6]|HEADER|L(?:ABEL|EGEND|I)|O(?:L|UTPUT)|P(?:RE)?|SECTION|T(?:ABLE|BODY|D|FOOT|H|HEAD|R)|UL)$/,
        bM = /^(?:HEAD|META|STYLE)/,
        bN = new L(null, i | h, function() {
            return !0
        }),
        bO = function cA(a, b, c) {
            var f = a.childNodes,
                g, h, i, j, k, l, m, n, o, p, q, r, s;
            c = c || {}, g = a;
            while (Q(g)) g = g.parentNode;
            bN.root = g;
            for (h = 0, i = f.length; h < i; h += 1) {
                j = f[h], k = j.nodeName, l = j.nodeType, m = bK[k];
                if (l === d) {
                    n = j.childNodes.length;
                    if (m) j = m(j, a);
                    else {
                        if (bM.test(k)) {
                            a.removeChild(j), h -= 1, i -= 1;
                            continue
                        }
                        if (!bL.test(k) && !Q(j)) {
                            h -= 1, i += n - 1, a.replaceChild(bc(j), j);
                            continue
                        }
                    }
                    n && cA(j, b || k === "PRE", c)
                } else {
                    if (l === e) {
                        q = j.data, o = !I.test(q.charAt(0)), p = !I.test(q.charAt(q.length - 1));
                        if (b || !o && !p) continue;
                        if (o) {
                            bN.currentNode = j;
                            while (r = bN.previousPONode()) {
                                k = r.nodeName;
                                if (k === "IMG" || k === "#text" && /\S/.test(r.data)) break;
                                if (!Q(r)) {
                                    r = null;
                                    break
                                }
                            }
                            q = q.replace(/^\s+/g, r ? " " : "")
                        }
                        if (p) {
                            bN.currentNode = j;
                            while (r = bN.nextNode()) {
                                if (k === "IMG" || k === "#text" && /\S/.test(r.data)) break;
                                if (!Q(r)) {
                                    r = null;
                                    break
                                }
                            }
                            q = q.replace(/\s+$/g, r ? " " : "")
                        }
                        if (q) {
                            j.data = q;
                            continue
                        }
                    }
                    a.removeChild(j), h -= 1, i -= 1
                }
            }
            return a
        },
        bP = function cB(a) {
            var b = a.childNodes,
                c = b.length,
                f;
            while (c--) f = b[c], f.nodeType === d && !P(f) ? (cB(f), Q(f) && !f.firstChild && a.removeChild(f)) : f.nodeType === e && !f.data && a.removeChild(f)
        },
        bQ = function(a) {
            return a.nodeType === d ? a.nodeName === "BR" : I.test(a.data)
        },
        bR = function(a) {
            var b = a.parentNode,
                c;
            while (Q(b)) b = b.parentNode;
            return c = new L(b, h | i, bQ), c.currentNode = a, !!c.nextNode()
        },
        bS = function(a, b) {
            var c = a.querySelectorAll("BR"),
                d = [],
                e = c.length,
                f, g, h;
            for (f = 0; f < e; f += 1) d[f] = bR(c[f]);
            while (e--) {
                g = c[e], h = g.parentNode;
                if (!h) continue;
                d[e] ? Q(h) || bf(h, b) : ba(g)
            }
        },
        bT = function(a) {
            var b = a.clipboardData,
                c = this.getSelection(),
                d = this.createElement("div"),
                e = this._root,
                f = this;
            this.saveUndoState(c), !A && !u && b ? (bt(c, e), d.appendChild(bp(c, e)), b.setData("text/html", d.innerHTML), b.setData("text/plain", d.innerText || d.textContent), a.preventDefault()) : setTimeout(function() {
                try {
                    f._ensureBottomLine()
                } catch (a) {
                    f.didError(a)
                }
            }, 0), this.setSelection(c)
        },
        bU = function(a) {
            if (!x) {
                var b = a.clipboardData,
                    c = this.getSelection(),
                    d = this.createElement("div"),
                    e = this._root,
                    f, g, h;
                if (!A && !u && b) {
                    c = c.cloneRange();
                    if (bu(c, e) === bv(c, e)) bs(c), f = c.cloneContents();
                    else {
                        bt(c, e), f = c.cloneContents(), g = c.commonAncestorContainer;
                        while (g && g !== e) h = g.cloneNode(!1), h.appendChild(f), f = h, g = g.parentNode
                    }
                    d.appendChild(f), b.setData("text/html", d.innerHTML), b.setData("text/plain", d.innerText || d.textContent), a.preventDefault()
                }
            }
        },
        bW = function(a) {
            var b = a.clipboardData,
                c = b && b.items,
                d = this.isShiftDown,
                e = !1,
                f = !1,
                g = null,
                h = this,
                i, j, k, l, m;
            if (!A && c && !x) {
                a.preventDefault(), i = c.length;
                var n = function(a) {
                    h.insertHTML(a, !0)
                };
                while (i--) {
                    j = c[i], k = j.type;
                    if (!d && k === "text/html") {
                        j.getAsString(n);
                        return
                    }
                    k === "text/plain" && (g = j), !d && /^image\/.*/.test(k) && (f = !0)
                }
                f ? (this.fireEvent("dragover", {
                    dataTransfer: b,
                    preventDefault: function() {
                        e = !0
                    }
                }), e && this.fireEvent("drop", {
                    dataTransfer: b,
                    editorCustomPaste: !0
                })) : g && j.getAsString(function(a) {
                    h.insertPlainText(a, !0)
                });
                return
            }
            l = b && b.types;
            if (!A && l && (J.call(l, "text/html") > -1 || !x && J.call(l, "text/plain") > -1 && J.call(l, "text/rtf") < 0)) {
                a.preventDefault(), !d && (m = b.getData("text/html")) ? this.insertHTML(m, !0) : ((m = b.getData("text/plain")) || (m = b.getData("text/uri-list"))) && this.insertPlainText(m, !0);
                return
            }
            this._awaitingPaste = !0;
            var o = this._doc.body,
                p = this.getSelection(),
                q = p.startContainer,
                r = p.startOffset,
                s = p.endContainer,
                t = p.endOffset,
                u = this.createElement("DIV", {
                    contenteditable: "true",
                    style: "position:fixed; overflow:hidden; top:0; right:100%; width:1px; height:1px;"
                });
            o.appendChild(u), p.selectNodeContents(u), this.setSelection(p), setTimeout(function() {
                try {
                    h._awaitingPaste = !1;
                    var a = "",
                        b = u,
                        c, d;
                    while (u = b) b = u.nextSibling, ba(u), c = u.firstChild, c && c === u.lastChild && c.nodeName === "DIV" && (u = c), a += u.innerHTML;
                    d = h._createRange(q, r, s, t), h.setSelection(d), a && h.insertHTML(a, !0)
                } catch (e) {
                    h.didError(e)
                }
            }, 0)
        },
        bX = function(a) {
            var b = a.dataTransfer.types,
                c = b.length,
                d = !1,
                e = !1;
            while (c--) switch (b[c]) {
                case "text/plain":
                    d = !0;
                    break;
                case "text/html":
                    e = !0;
                    break;
                default:
                    return
            }(e || d) && this.saveUndoState()
        },
        bY = [],
        ca = b_.prototype;
    ca.testPresenceinSelection = function(a, b, c, d) {
        var e = this.getPath(),
            f = d.test(e) | this.hasFormat(c);
        return a == b && f ? !0 : !1
    }, ca.addTextLinks = function(a, b, c) {
        cv(a, b, c)
    }, ca.setConfig = function(a) {
        return a = b$({
            blockTag: "DIV",
            blockAttributes: null,
            tagAttributes: {
                blockquote: null,
                ul: null,
                ol: null,
                li: null,
                a: null
            },
            leafNodeNames: N,
            undo: {
                documentSizeThreshold: -1,
                undoLimit: -1
            }
        }, a, !0), a.blockTag = a.blockTag.toUpperCase(), this._config = a, this
    }, ca.createElement = function(a, b, c) {
        return bd(this._doc, a, b, c)
    }, ca.createDefaultBlock = function(a) {
        var b = this._config;
        return be(this.createElement(b.blockTag, b.blockAttributes, a), this._root)
    }, ca.didError = function(a) {}, ca.getDocument = function() {
        return this._doc
    }, ca.getRoot = function() {
        return this._root
    }, ca.modifyDocument = function(a) {
        this._ignoreAllChanges = !0, this._mutation && this._mutation.disconnect(), a(), this._ignoreAllChanges = !1, this._mutation && this._mutation.observe(this._root, {
            childList: !0,
            attributes: !0,
            characterData: !0,
            subtree: !0
        })
    };
    var cb = {
        pathChange: 1,
        select: 1,
        input: 1,
        undoStateChange: 1
    };
    ca.fireEvent = function(a, b) {
        var c = this._events[a],
            d, e, f;
        if (/^(?:focus|blur)/.test(a)) {
            d = Z(this._root, this._doc.activeElement);
            if (a === "focus") {
                if (!d || this._isFocused) return this;
                this._isFocused = !0
            } else {
                if (d || !this._isFocused) return this;
                this._isFocused = !1
            }
        }
        if (c) {
            b || (b = {}), b.type !== a && (b.type = a), c = c.slice(), e = c.length;
            while (e--) {
                f = c[e];
                try {
                    f.handleEvent ? f.handleEvent(b) : f.call(this, b)
                } catch (g) {
                    g.details = "Squire: fireEvent error. Event type: " + a, this.didError(g)
                }
            }
        }
        return this
    }, ca.destroy = function() {
        var a = bY.length,
            b = this._events,
            c;
        for (c in b) this.removeEventListener(c);
        this._mutation && this._mutation.disconnect();
        while (a--) bY[a] === this && bY.splice(a, 1);
        this._undoIndex = -1, this._undoStack = [], this._undoStackLength = 0
    }, ca.handleEvent = function(a) {
        this.fireEvent(a.type, a)
    }, ca.addEventListener = function(a, b) {
        var c = this._events[a],
            d = this._root;
        return b ? (c || (c = this._events[a] = [], cb[a] || (a === "selectionchange" && (d = this._doc), d.addEventListener(a, this, !0))), c.push(b), this) : (this.didError({
            name: "Squire: addEventListener with null or undefined fn",
            message: "Event type: " + a
        }), this)
    }, ca.removeEventListener = function(a, b) {
        var c = this._events[a],
            d = this._root,
            e;
        if (c) {
            if (b) {
                e = c.length;
                while (e--) c[e] === b && c.splice(e, 1)
            } else c.length = 0;
            c.length || (delete this._events[a], cb[a] || (a === "selectionchange" && (d = this._doc), d.removeEventListener(a, this, !0)))
        }
        return this
    }, ca._createRange = function(a, b, c, d) {
        if (a instanceof this._win.Range) return a.cloneRange();
        var e = this._doc.createRange();
        return e.setStart(a, b), c ? e.setEnd(c, d) : e.setEnd(a, b), e
    }, ca.getCursorPosition = function(a) {
        if (!a && !(a = this.getSelection()) || !a.getBoundingClientRect) return null;
        var b = a.getBoundingClientRect(),
            c, d;
        return b && !b.top && (this._ignoreChange = !0, c = this._doc.createElement("SPAN"), c.textContent = r, bn(a, c), b = c.getBoundingClientRect(), d = c.parentNode, d.removeChild(c), bi(d, a)), b
    }, ca._moveCursorTo = function(a) {
        var b = this._root,
            c = this._createRange(b, a ? 0 : b.childNodes.length);
        return bs(c), this.setSelection(c), this
    }, ca.moveCursorToStart = function() {
        return this._moveCursorTo(!0)
    }, ca.moveCursorToEnd = function() {
        return this._moveCursorTo(!1)
    };
    var cc = function(a) {
        return a._win.getSelection() || null
    };
    ca.setSelection = function(a) {
        if (a) {
            this._lastSelection = a;
            if (!this._isFocused) cd.call(this);
            else if (w && !this._restoreSelection) cd.call(this), this.blur(), this.focus();
            else {
                u && this._win.focus();
                var b = cc(this);
                b && (b.removeAllRanges(), b.addRange(a))
            }
        }
        return this
    }, ca.getSelection = function() {
        var a = cc(this),
            b = this._root,
            c, d, e;
        return a && a.rangeCount && (c = a.getRangeAt(0).cloneRange(), d = c.startContainer, e = c.endContainer, d && P(d) && c.setStartBefore(d), e && P(e) && c.setEndBefore(e)), c && Z(b, c.commonAncestorContainer) ? this._lastSelection = c : c = this._lastSelection, c || (c = this._createRange(b.firstChild, 0)), c
    }, ca.getSelectedText = function() {
        var a = this.getSelection(),
            b = new L(a.commonAncestorContainer, i | h, function(b) {
                return br(a, b, !0)
            }),
            c = a.startContainer,
            d = a.endContainer,
            f = b.currentNode = c,
            g = "",
            j = !1,
            k;
        b.filter(f) || (f = b.nextNode());
        while (f) {
            if (f.nodeType === e) k = f.data, k && /\S/.test(k) && (f === d && (k = k.slice(0, a.endOffset)), f === c && (k = k.slice(a.startOffset)), g += k, j = !0);
            else if (f.nodeName === "BR" || j && !Q(f)) g += "\n", j = !1;
            f = b.nextNode()
        }
        return g
    }, ca.getPath = function() {
        return this._path
    };
    var cg = function(a, b) {
        var c = new L(a, i, function() {
                return !0
            }, !1),
            d, e, f;
        while (e = c.nextNode())
            while ((f = e.data.indexOf(r)) > -1 && (!b || e.parentNode !== b)) {
                if (e.length === 1) {
                    do d = e.parentNode, d.removeChild(e), e = d, c.currentNode = d; while (Q(e) && !_(e));
                    break
                }
                e.deleteData(f, 1)
            }
    };
    ca._didAddZWS = function() {
        this._hasZWS = !0
    }, ca._removeZWS = function() {
        if (!this._hasZWS) return;
        cg(this._root), this._hasZWS = !1
    }, ca._updatePath = function(a, b) {
        var c = a.startContainer,
            d = a.endContainer,
            e;
        if (b || c !== this._lastAnchorNode || d !== this._lastFocusNode) this._lastAnchorNode = c, this._lastFocusNode = d, e = c && d ? c === d ? $(d, this._root) : "(selection)" : "", this._path !== e && (this._path = e, this.fireEvent("pathChange", {
            path: e
        }));
        a.collapsed || this.fireEvent("select")
    }, ca._updatePathOnEvent = function() {
        var a = this;
        a._willUpdatePath || (a._willUpdatePath = !0, setTimeout(function() {
            a._willUpdatePath = !1, a._updatePath(a.getSelection())
        }, 0))
    }, ca.focus = function() {
        return this._root.focus(), C && this.fireEvent("focus"), this
    }, ca.blur = function() {
        return this._root.blur(), C && this.fireEvent("blur"), this
    };
    var ch = "squire-selection-start",
        ci = "squire-selection-end";
    ca._saveRangeToBookmark = function(a) {
        var b = this.createElement("INPUT", {
                id: ch,
                type: "hidden"
            }),
            d = this.createElement("INPUT", {
                id: ci,
                type: "hidden"
            }),
            e;
        bn(a, b), a.collapse(!1), bn(a, d), b.compareDocumentPosition(d) & c && (b.id = ci, d.id = ch, e = b, b = d, d = e), a.setStartAfter(b), a.setEndBefore(d)
    }, ca._getRangeAndRemoveBookmark = function(a) {
        var b = this._root,
            c = b.querySelector("#" + ch),
            d = b.querySelector("#" + ci);
        if (c && d) {
            var f = c.parentNode,
                g = d.parentNode,
                h = J.call(f.childNodes, c),
                i = J.call(g.childNodes, d);
            f === g && (i -= 1), ba(c), ba(d), a || (a = this._doc.createRange()), a.setStart(f, h), a.setEnd(g, i), bi(f, a), f !== g && bi(g, a);
            if (a.collapsed) {
                f = a.startContainer;
                if (f.nodeType === e) {
                    g = f.childNodes[a.startOffset];
                    if (!g || g.nodeType !== e) g = f.childNodes[a.startOffset - 1];
                    g && g.nodeType === e && (a.setStart(g, 0), a.collapse(!0))
                }
            }
        }
        return a || null
    }, ca._keyUpDetectChange = function(a) {
        var b = a.keyCode;
        !a.ctrlKey && !a.metaKey && !a.altKey && (b < 16 || b > 20) && (b < 33 || b > 45) && this._docWasChanged()
    }, ca._docWasChanged = function() {
        if (this._ignoreAllChanges) return;
        if (H && this._ignoreChange) {
            this._ignoreChange = !1;
            return
        }
        this._isInUndoState && (this._isInUndoState = !1, this.fireEvent("undoStateChange", {
            canUndo: !0,
            canRedo: !1
        })), this.fireEvent("input")
    }, ca._recordUndoState = function(a) {
        if (!this._isInUndoState) {
            var b = this._undoIndex += 1,
                c = this._undoStack,
                d = this._config.undo,
                e = d.documentSizeThreshold,
                f = d.undoLimit,
                g;
            b < this._undoStackLength && (c.length = this._undoStackLength = b), a && this._saveRangeToBookmark(a), g = this._getHTML(), e > -1 && g.length * 2 > e && f > -1 && b > f && (c.splice(0, b - f), b = this._undoIndex = f, this._undoStackLength = f), c[b] = g, this._undoStackLength += 1, this._isInUndoState = !0
        }
    }, ca.saveUndoState = function(a) {
        return a === b && (a = this.getSelection()), this._isInUndoState || (this._recordUndoState(a), this._getRangeAndRemoveBookmark(a)), this
    }, ca.undo = function() {
        if (this._undoIndex !== 0 || !this._isInUndoState) {
            this._recordUndoState(this.getSelection()), this._undoIndex -= 1, this._setHTML(this._undoStack[this._undoIndex]);
            var a = this._getRangeAndRemoveBookmark();
            a && this.setSelection(a), this._isInUndoState = !0, this.fireEvent("undoStateChange", {
                canUndo: this._undoIndex !== 0,
                canRedo: !0
            }), this.fireEvent("input")
        }
        return this
    }, ca.redo = function() {
        var a = this._undoIndex,
            b = this._undoStackLength;
        if (a + 1 < b && this._isInUndoState) {
            this._undoIndex += 1, this._setHTML(this._undoStack[this._undoIndex]);
            var c = this._getRangeAndRemoveBookmark();
            c && this.setSelection(c), this.fireEvent("undoStateChange", {
                canUndo: !0,
                canRedo: a + 2 < b
            }), this.fireEvent("input")
        }
        return this
    }, ca.hasFormat = function(a, b, c) {
        a = a.toUpperCase(), b || (b = {});
        if (!c && !(c = this.getSelection())) return !1;
        !c.collapsed && c.startContainer.nodeType === e && c.startOffset === c.startContainer.length && c.startContainer.nextSibling && c.setStartBefore(c.startContainer.nextSibling), !c.collapsed && c.endContainer.nodeType === e && c.endOffset === 0 && c.endContainer.previousSibling && c.setEndAfter(c.endContainer.previousSibling);
        var d = this._root,
            f = c.commonAncestorContainer,
            g, h;
        if (Y(f, d, a, b)) return !0;
        if (f.nodeType === e) return !1;
        g = new L(f, i, function(a) {
            return br(c, a, !0)
        }, !1);
        var j = !1;
        while (h = g.nextNode()) {
            if (!Y(h, d, a, b)) return !1;
            j = !0
        }
        return j
    }, ca.getFontInfo = function(a) {
        var c = {
                color: b,
                backgroundColor: b,
                family: b,
                size: b
            },
            d = 0,
            f, g, h;
        if (!a && !(a = this.getSelection())) return c;
        f = a.commonAncestorContainer;
        if (a.collapsed || f.nodeType === e) {
            f.nodeType === e && (f = f.parentNode);
            while (d < 4 && f) {
                if (g = f.style) !c.color && (h = g.color) && (c.color = h, d += 1), !c.backgroundColor && (h = g.backgroundColor) && (c.backgroundColor = h, d += 1), !c.family && (h = g.fontFamily) && (c.family = h, d += 1), !c.size && (h = g.fontSize) && (c.size = h, d += 1);
                f = f.parentNode
            }
        }
        return c
    }, ca._addFormat = function(a, b, c) {
        var d = this._root,
            f, g, j, k, l, m, n, o, p;
        if (c.collapsed) {
            f = be(this.createElement(a, b), d), bn(c, f), c.setStart(f.firstChild, f.firstChild.length), c.collapse(!0), p = f;
            while (Q(p)) p = p.parentNode;
            cg(p, f)
        } else {
            g = new L(c.commonAncestorContainer, i | h, function(a) {
                return (a.nodeType === e || a.nodeName === "BR" || a.nodeName === "IMG") && br(c, a, !0)
            }, !1), j = c.startContainer, l = c.startOffset, k = c.endContainer, m = c.endOffset, g.currentNode = j, g.filter(j) || (j = g.nextNode(), l = 0);
            if (!j) return c;
            do n = g.currentNode, o = !Y(n, d, a, b), o && (n === k && n.length > m && n.splitText(m), n === j && l && (n = n.splitText(l), k === j && (k = n, m -= l), j = n, l = 0), f = this.createElement(a, b), bb(n, f), f.appendChild(n)); while (g.nextNode());
            k.nodeType !== e && (n.nodeType === e ? (k = n, m = n.length) : (k = n.parentNode, m = 1)), c = this._createRange(j, l, k, m)
        }
        return c
    }, ca._removeFormat = function(a, b, c, d) {
        this._saveRangeToBookmark(c);
        var f = this._doc,
            g;
        c.collapsed && (F ? (g = f.createTextNode(r), this._didAddZWS()) : g = f.createTextNode(""), bn(c, g));
        var h = c.commonAncestorContainer;
        while (Q(h)) h = h.parentNode;
        var i = c.startContainer,
            j = c.startOffset,
            k = c.endContainer,
            l = c.endOffset,
            m = [],
            n = function(a, b) {
                if (br(c, a, !1)) return;
                var d = a.nodeType === e,
                    f, g;
                if (!br(c, a, !0)) {
                    a.nodeName !== "INPUT" && (!d || a.data) && m.push([b, a]);
                    return
                }
                if (d) a === k && l !== a.length && m.push([b, a.splitText(l)]), a === i && j && (a.splitText(j), m.push([b, a]));
                else
                    for (f = a.firstChild; f; f = g) g = f.nextSibling, n(f, b)
            },
            o = Array.prototype.filter.call(h.getElementsByTagName(a), function(d) {
                return br(c, d, !0) && X(d, a, b)
            });
        return d || o.forEach(function(a) {
            n(a, a)
        }), m.forEach(function(a) {
            var b = a[0].cloneNode(!1),
                c = a[1];
            bb(c, b), b.appendChild(c)
        }), o.forEach(function(a) {
            bb(a, bc(a))
        }), this._getRangeAndRemoveBookmark(c), g && c.collapse(!1), bi(h, c), c
    }, ca.changeFormat = function(a, b, c, d) {
        return !c && !(c = this.getSelection()) ? this : (this.saveUndoState(c), b && (c = this._removeFormat(b.tag.toUpperCase(), b.attributes || {}, c, d)), a && (c = this._addFormat(a.tag.toUpperCase(), a.attributes || {}, c)), this.setSelection(c), this._updatePath(c, !0), H || this._docWasChanged(), this)
    };
    var cj = {
            DT: "DD",
            DD: "DT",
            LI: "LI",
            H1: "H1",
            H2: "H2",
            H3: "H3",
            H4: "H4",
            H5: "H5",
            H6: "H6"
        },
        ck = function(a, b, c, d) {
            var e = cj[b.nodeName],
                f = null,
                g = bg(c, d, b.parentNode, a._root),
                h = a._config;
            return e || (e = h.blockTag, f = h.blockAttributes), X(g, e, f) || (b = bd(g.ownerDocument, e, f), g.dir && (b.dir = g.dir), bb(g, b), b.appendChild(bc(g)), g = b), ["H1", "H2", "H3"].indexOf(g.nodeName) >= 0 && g.innerText.trim().length < 1 && g.removeAttribute("id"), g
        };
    ca.forEachBlock = function(a, b, c) {
        if (!c && !(c = this.getSelection())) return this;
        b && this.saveUndoState(c);
        var d = this._root,
            e = bu(c, d),
            f = bv(c, d);
        if (e && f)
            do
                if (a(e) || e === f) break;
        while (e = V(e, d));
        return b && (this.setSelection(c), this._updatePath(c, !0), H || this._docWasChanged()), this
    }, ca.modifyBlocks = function(a, b) {
        if (!b && !(b = this.getSelection())) return this;
        this._isInUndoState ? this._saveRangeToBookmark(b) : this._recordUndoState(b);
        var c = this._root,
            d;
        return bz(b, c), bt(b, c), d = bo(b, c, c), bn(b, a.call(this, d)), b.endOffset < b.endContainer.childNodes.length && bk(b.endContainer.childNodes[b.endOffset], c), bk(b.startContainer.childNodes[b.startOffset], c), this._getRangeAndRemoveBookmark(b), this.setSelection(b), this._updatePath(b, !0), H || this._docWasChanged(), this
    };
    var cl = function(a) {
            return this.createElement("BLOCKQUOTE", this._config.tagAttributes.blockquote, [a])
        },
        cm = function(a) {
            var b = this._root,
                c = a.querySelectorAll("blockquote");
            return Array.prototype.filter.call(c, function(a) {
                return !Y(a.parentNode, b, "BLOCKQUOTE")
            }).forEach(function(a) {
                bb(a, bc(a))
            }), a
        },
        cn = function() {
            return this.createDefaultBlock([this.createElement("INPUT", {
                id: ch,
                type: "hidden"
            }), this.createElement("INPUT", {
                id: ci,
                type: "hidden"
            })])
        },
        co = function(a, b, c) {
            var d = T(b, a._root),
                e, f, g, h, i = a._config.tagAttributes,
                j = i[c.toLowerCase()],
                k = i.li;
            while (e = d.nextNode()) f = e.parentNode.nodeName, f !== "LI" ? (h = a.createElement("LI", k), e.dir && (h.dir = e.dir), (g = e.previousSibling) && g.nodeName === c ? g.appendChild(h) : bb(e, a.createElement(c, j, [h])), h.appendChild(e)) : (e = e.parentNode.parentNode, f = e.nodeName, f !== c && /^[OU]L$/.test(f) && bb(e, a.createElement(c, j, [bc(e)])))
        },
        cp = function(a) {
            return co(this, a, "UL"), a
        },
        cq = function(a) {
            return co(this, a, "OL"), a
        },
        cr = function(a) {
            var b = a.querySelectorAll("UL, OL"),
                c, d, e, f, g, h, i;
            for (c = 0, d = b.length; c < d; c += 1) {
                f = b[c], g = bc(f), h = g.childNodes, e = h.length;
                while (e--) i = h[e], bb(i, bc(i));
                bf(g, this._root), bb(f, g)
            }
            return a
        },
        cs = function(a) {
            var b, c, d, e, f, g, h = a.querySelectorAll("LI"),
                i = this._config.tagAttributes;
            for (b = 0, c = h.length; c > b; b += 1) d = h[b], S(d.firstChild) || (e = d.parentNode.nodeName, f = d.previousSibling, f && (f = f.lastChild) && f.nodeName === e || (g = i[e.toLowerCase()], f = this.createElement(e, g), bb(d, f)), f.appendChild(d));
            return a
        },
        ct = function(a) {
            var b = this._root,
                c = a.querySelectorAll("LI");
            return Array.prototype.filter.call(c, function(a) {
                return !S(a.firstChild)
            }).forEach(function(c) {
                var d, e = c.parentNode,
                    f = e.parentNode,
                    g = c.firstChild,
                    h = g;
                if (c.previousSibling && (e = bg(e, c, f, b)), /^[OU]L$/.test(f.nodeName)) f.insertBefore(c, e), e.firstChild || f.removeChild(e);
                else
                    for (; h && (d = h.nextSibling, !S(h));) f.insertBefore(h, e), h = d;
                for ("LI" === f.nodeName && g.previousSibling && bg(f, g, f.parentNode, b); c !== a && !c.childNodes.length;) e = c.parentNode, e.removeChild(c), c = e
            }, this), bf(a, b), a
        };
    ca._ensureBottomLine = function() {
        var a = this._root,
            b = a.lastElementChild;
        if (!b || b.nodeName !== this._config.blockTag || !R(b)) b && b.nodeName == "BR" && a.removeChild(b), a.appendChild(this.createDefaultBlock())
    }, ca.setKeyHandler = function(a, b) {
        return this._keyHandlers[a] = b, this
    }, ca._getHTML = function() {
        return this._root.innerHTML
    }, ca._setHTML = function(a) {
        var b = this._root,
            c = b;
        c.innerHTML = a;
        do be(c, b); while (c = V(c, b));
        this._ignoreChange = !0
    }, ca.getHTML = function(a) {
        var b = [],
            c, d, e, f, g, h;
        a && (h = this.getSelection()) && this._saveRangeToBookmark(h);
        if (E) {
            c = this._root, d = c;
            while (d = V(d, c)) !d.textContent && !d.querySelector("BR") && (e = this.createElement("BR"), d.appendChild(e), b.push(e))
        }
        f = this._getHTML().replace(/\u200B/g, "");
        if (E) {
            g = b.length;
            while (g--) ba(b[g])
        }
        return h && this._getRangeAndRemoveBookmark(h), f
    }, ca.setHTML = function(a, b) {
        var c = this._doc.createDocumentFragment(),
            d = this.createElement("DIV"),
            e = this._root,
            f;
        b = b || {};
        var g;
        d.innerHTML = a, c.appendChild(bc(d)), bO(c, !1, {
            editorRef: this._editorRef,
            handleWaitingImages: b.oldState
        }), bS(c, e), bf(c, e);
        var h = c;
        while (h = V(h, e)) be(h, e);
        this._ignoreChange = !0;
        while (f = e.lastChild) e.removeChild(f);
        e.appendChild(c), be(e, e), b.oldState && (g = this._editorRef(), g.updateStateHTML(g.stack.stackPosition, e.innerHTML)), this._undoIndex = -1, this._undoStack.length = 0, this._undoStackLength = 0, this._isInUndoState = !1;
        var i = this._getRangeAndRemoveBookmark() || this._createRange(e.firstChild, 0);
        return this.saveUndoState(i), this._lastSelection = i, cd.call(this), this._updatePath(i, !0), this
    }, ca.insertElement = function(a, b) {
        b || (b = this.getSelection()), b.collapse(!0);
        if (Q(a)) bn(b, a), b.setStartAfter(a);
        else {
            var c = this._root,
                d = bu(b, c) || c,
                e, f;
            while (d !== c && !d.nextSibling) d = d.parentNode;
            d !== c && (e = d.parentNode, f = bg(e, d.nextSibling, c, c)), f ? c.insertBefore(a, f) : (c.appendChild(a), f = this.createDefaultBlock(), c.appendChild(f)), b.setStart(f, 0), b.setEnd(f, 0), bs(b)
        }
        return this.focus(), this.setSelection(b), this._updatePath(b), H || this._docWasChanged(), this
    }, ca.insertImage = function(a, b) {
        var c = this.createElement("IMG", b$({
            src: a
        }, b, !0));
        return this.insertElement(c), c
    };
    var cu = /\b((?:(?:ht|f)tps?:\/\/|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,}\/)(?:[^\s()<>]+|\([^\s()<>]+\))+(?:\((?:[^\s()<>]+|(?:\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'".,<>?«»“”‘’]))|([\w\-.%+]+@(?:[\w\-]+\.)+[A-Z]{2,}\b)/i,
        cv = function(a, b, c) {
            var d = a.ownerDocument,
                e = new L(a, i, function(a) {
                    return !Y(a, b, "A")
                }, !1),
                f = c._config.tagAttributes.a,
                g, h, j, k, l, m, n;
            while (g = e.nextNode()) {
                h = g.data, j = g.parentNode;
                while (k = cu.exec(h)) l = k.index, m = l + k[0].length, l && (n = d.createTextNode(h.slice(0, l)), j.insertBefore(n, g)), n = c.createElement("A", b$({
                    href: k[1] ? /^(?:ht|f)tps?:/.test(k[1]) ? k[1] : "http://" + k[1] : "mailto:" + k[2]
                }, f, !1)), n.textContent = h.slice(l, m), j.insertBefore(n, g), g.data = h = h.slice(m)
            }
        },
        cw = function(a, b) {
            a = a.replace("border=0", "border=1");
            var c = a.lastIndexOf("<!--EndFragment-->");
            a = a.slice(0, c);
            var d = /<style([.\s\S])*>([.\s\S])*<\/style>/i.exec(a)[0],
                e = a.slice(a.search("<body")),
                f = /\.x([a-z][0-9]+)[\n]?(\s)*{([""#a-zA-Z0-9\n\s.:,;-]*)/g,
                g = d ? d.match(f) : [],
                h = g ? g.length : 0,
                i = [],
                j = [],
                k, l, m, n, o, p = b.createDocumentFragment(),
                q = b.createElement("div");
            q.innerHTML = e, p.appendChild(q);
            if (h) {
                for (var r = 0; r < h; r++) k = g[r].search("{"), i[r] = g[r].slice(0, k).trim(), j[r] = g[r].slice(k + 1, g[r].length);
                l = i.length;
                var s = /([""\.a-zA-Z0-9-\n\s#:,])*/g;
                for (m = 0; m < l; m++) {
                    var t, u, v, w, x = {},
                        y = q.firstElementChild.querySelectorAll(i[m]),
                        z = y.length,
                        A = j[m].match(s),
                        B = A.length;
                    for (o = 0; o < B; o++) A[o] = A[o].trim(), A[o].length > 0 && (t = A[o].slice(0, A[o].search(":")), x[t] = A[o].slice(A[o].search(":") + 1, A[o].length));
                    u = Object.keys(x), v = u.length;
                    for (n = 0; n < z; n++)
                        for (w = 0; w < v; w++) y[n].style[u[w]] = x[u[w]]
                }
            }
            return q.innerHTML
        };
    ca.extractCommonContainer = function(a, b, c) {
        return bo(a, b, c)
    }, ca.insertHTML = function(a, b) {
        var c = this.getSelection(),
            d = this._doc,
            e, f, g, h, i, j, k, l, m = this;
        b && (l = a.search(/<meta .* content=Excel\.Sheet>/g), l > 0 ? a = cw(a, d) : (e = a.indexOf("<!--StartFragment-->"), f = a.lastIndexOf("<!--EndFragment-->"), e > -1 && f > -1 && (a = a.slice(e + 20, f)))), g = this.createElement("DIV"), g.innerHTML = a;
        var n = g.getElementsByTagName("img"),
            o = n && n.length;
        if (o)
            for (var p = 0; p < o; p++) {
                var q = n[0].style;
                q.maxWidth = "100%", q.padding = "10px", q.boxSizing = "border-box"
            }
        h = d.createDocumentFragment(), h.appendChild(bc(g)), this._editorRef().pasteContent(a);
        if (b && this._editorRef().processPastedFile && h.firstChild.nodeName === "IMG") {
            if (h.firstChild.src.substr(0, 5) === "data:") {
                this._editorRef().processInlineImages(h.firstChild.src), this.focus();
                return
            }
            if (h.firstChild.src.substr(0, 11) === "webkit-fake") {
                this.focus();
                return
            }
        }
        this.saveUndoState(c);
        try {
            i = this._root, j = h, k = {
                fragment: h,
                preventDefault: function() {
                    this.defaultPrevented = !0
                },
                defaultPrevented: !1
            }, bO(h), bS(h, null), bP(h), h.normalize();
            while (j = V(j, h)) be(j, null);
            b && this.fireEvent("willPaste", k), k.defaultPrevented || (bq(c, k.fragment, i), H || this._docWasChanged(), c.collapse(!1), this._ensureBottomLine()), this.setSelection(c), this._updatePath(c, !0), b && this.focus()
        } catch (r) {
            this.didError(r)
        }
        return this._editorRef().styletext && this._editorRef().insertTOC(), this
    };
    var cx = function(a) {
        return a.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;").split('"').join("&quot;")
    };
    ca.insertPlainText = function(a, b) {
        var c = a.split("\n"),
            d = this._config,
            e = d.blockTag,
            f = d.blockAttributes,
            g = "</" + e + ">",
            h = "<" + e,
            i, j, k, l;
        for (i in f) h += " " + i + '="' + cx(f[i]) + '"';
        h += ">";
        for (j = 0, k = c.length; j < k; j += 1) l = c[j], l = cx(l).replace(/ (?= )/g, "&nbsp;"), j && j + 1 < k && (l = h + (l || "<BR>") + g), c[j] = l;
        return this.insertHTML(c.join(""), b)
    };
    var cy = function(a, b, c) {
        return function() {
            return this[a](b, c), this.focus()
        }
    };
    ca.addStyles = function(a) {
        if (a) {
            var b = this._doc.documentElement.firstChild,
                c = this.createElement("STYLE", {
                    type: "text/css"
                });
            c.appendChild(this._doc.createTextNode(a)), b.appendChild(c)
        }
        return this
    }, ca.bold = cy("changeFormat", {
        tag: "B"
    }), ca.italic = cy("changeFormat", {
        tag: "I"
    }), ca.underline = cy("changeFormat", {
        tag: "U"
    }), ca.strikethrough = cy("changeFormat", {
        tag: "S"
    }), ca.subscript = cy("changeFormat", {
        tag: "SUB"
    }, {
        tag: "SUP"
    }), ca.superscript = cy("changeFormat", {
        tag: "SUP"
    }, {
        tag: "SUB"
    }), ca.removeBold = cy("changeFormat", null, {
        tag: "B"
    }), ca.removeItalic = cy("changeFormat", null, {
        tag: "I"
    }), ca.removeUnderline = cy("changeFormat", null, {
        tag: "U"
    }), ca.removeStrikethrough = cy("changeFormat", null, {
        tag: "S"
    }), ca.removeSubscript = cy("changeFormat", null, {
        tag: "SUB"
    }), ca.removeSuperscript = cy("changeFormat", null, {
        tag: "SUP"
    }), ca.makeLink = function(a, b) {
        var c = this.getSelection();
        if (c.collapsed) {
            var d = a.indexOf(":") + 1;
            if (d)
                while (a[d] === "/") d += 1;
            bn(c, this._doc.createTextNode(a.slice(d)))
        }
        return b = b$(b$({
            href: a
        }, b, !0), this._config.tagAttributes.a, !1), this.changeFormat({
            tag: "A",
            attributes: b
        }, {
            tag: "A"
        }, c), this.focus()
    }, ca.removeLink = function() {
        return this.changeFormat(null, {
            tag: "A"
        }, this.getSelection(), !0), this.focus()
    }, ca.setFontFace = function(a) {
        return this.changeFormat(a ? {
            tag: "SPAN",
            attributes: {
                "class": "font",
                style: "font-family: " + a + ", sans-serif;"
            }
        } : null, {
            tag: "SPAN",
            attributes: {
                "class": "font"
            }
        }), this.focus()
    }, ca.setFontSize = function(a) {
        var c = b;
        return c = a > "15px" ? "font-size:" + a + ";line-height:normal" : "font-size:" + a, this.changeFormat(a ? {
            tag: "SPAN",
            attributes: {
                "class": "size",
                style: c
            }
        } : null, {
            tag: "SPAN",
            attributes: {
                "class": "size"
            }
        }), this.focus()
    }, ca.setTextColour = function(a) {
        return this.changeFormat(a ? {
            tag: "SPAN",
            attributes: {
                "class": "colour",
                style: "color:" + a
            }
        } : null, {
            tag: "SPAN",
            attributes: {
                "class": "colour"
            }
        }), this.focus()
    }, ca.setHighlightColour = function(a) {
        return this.changeFormat(a ? {
            tag: "SPAN",
            attributes: {
                "class": "highlight",
                style: "background-color:" + a
            }
        } : a, {
            tag: "SPAN",
            attributes: {
                "class": "highlight"
            }
        }), this.focus()
    }, ca.setTextAlignment = function(a) {
        return this.forEachBlock(function(b) {
            b.className = (b.className.split(/\s+/).filter(function(a) {
                return !/align/.test(a)
            }).join(" ") + " align-" + a).trim(), b.style.textAlign = a
        }, !0), this.focus()
    }, ca.setTextDirection = function(a) {
        return this.forEachBlock(function(b) {
            b.style.direction = a, b.style.textAlign = "initial"
        }, !0), this.focus()
    }, ca.removeAllFormatting = function(a) {
        if (!a && !(a = this.getSelection()) || a.collapsed) return this;
        var b = this._root,
            c = a.commonAncestorContainer;
        while (c && !R(c)) c = c.parentNode;
        c || (bz(a, b), c = b);
        if (c.nodeType === e) return this;
        this.saveUndoState(a), bt(a, c);
        var d = c.ownerDocument,
            f = a.startContainer,
            g = a.startOffset,
            h = a.endContainer,
            i = a.endOffset,
            j = d.createDocumentFragment(),
            k = d.createDocumentFragment(),
            l = bg(h, i, c, b),
            m = bg(f, g, c, b),
            n, o;
        while (m !== l) n = m.nextSibling, j.appendChild(m), m = n;
        return cz(this, j, k), k.normalize(), m = k.firstChild, n = k.lastChild, o = c.childNodes, m ? (c.insertBefore(k, l), g = J.call(o, m), i = J.call(o, n) + 1) : (g = J.call(o, l), i = g), a.setStart(c, g), a.setEnd(c, i), bi(c, a), bs(a), this.setSelection(a), this._updatePath(a, !0), this.focus()
    }, ca.increaseQuoteLevel = cy("modifyBlocks", cl), ca.decreaseQuoteLevel = cy("modifyBlocks", cm), ca.makeUnorderedList = cy("modifyBlocks", cp), ca.makeOrderedList = cy("modifyBlocks", cq), ca.removeList = cy("modifyBlocks", cr), ca.increaseListLevel = cy("modifyBlocks", cs), ca.decreaseListLevel = cy("modifyBlocks", ct), typeof exports == "object" ? editorModule.exports = b_ : typeof define == "function" && define.amd ? define(function() {
        return b_
    }) : (s.Squire = b_, top !== s && a.documentElement.getAttribute("data-squireinit") === "true" && (s.editor = new b_(a), s.onEditorLoad && (s.onEditorLoad(s.editor), s.onEditorLoad = null)))
})(document),
function(a) {
    "use strict";
    var b = typeof window == "undefined" ? null : window;
    typeof define == "function" && define.amd ? define(function() {
        return a(b)
    }) : typeof editorModule != "undefined" ? editorModule.exports = a(b) : b.NewDOMPurify = a(b)
}(function a(b) {
    "use strict";
    var c = function(b) {
        return a(b)
    };
    c.version = "0.7.3";
    if (!b || !b.document || b.document.nodeType !== 9) return c.isSupported = !1, c;
    var d = b.document,
        e = d,
        f = b.DocumentFragment,
        g = b.HTMLTemplateElement,
        h = b.NodeFilter,
        i = b.NamedNodeMap || b.MozNamedAttrMap,
        j = b.Text,
        k = b.Comment,
        l = b.DOMParser;
    typeof g == "function" && (d = d.createElement("template").content.ownerDocument);
    var m = d.implementation,
        n = d.createNodeIterator,
        o = d.getElementsByTagName,
        p = d.createDocumentFragment,
        q = e.importNode,
        r = {};
    c.isSupported = typeof m.createHTMLDocument != "undefined" && d.documentMode !== 9;
    var s = function(a, b) {
            var c = b.length;
            while (c--) a[b[c]] = !0;
            return a
        },
        t = function(a) {
            var b = {},
                c;
            for (c in a) a.hasOwnProperty(c) && (b[c] = a[c]);
            return b
        },
        u = null,
        v = s({}, ["a", "abbr", "acronym", "address", "area", "article", "aside", "audio", "b", "bdi", "bdo", "big", "blink", "blockquote", "body", "br", "button", "canvas", "caption", "center", "cite", "code", "col", "colgroup", "content", "data", "datalist", "dd", "decorator", "del", "details", "dfn", "dir", "div", "dl", "dt", "element", "em", "fieldset", "figcaption", "figure", "font", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "img", "input", "ins", "kbd", "label", "legend", "li", "main", "map", "mark", "marquee", "menu", "menuitem", "meter", "nav", "nobr", "ol", "optgroup", "option", "output", "p", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "section", "select", "shadow", "small", "source", "spacer", "span", "strike", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "time", "tr", "track", "tt", "u", "ul", "var", "video", "wbr", "iframe", "svg", "altglyph", "altglyphdef", "altglyphitem", "animatecolor", "animatemotion", "animatetransform", "circle", "clippath", "defs", "desc", "ellipse", "font", "g", "glyph", "glyphref", "hkern", "image", "line", "lineargradient", "marker", "mask", "metadata", "mpath", "path", "pattern", "polygon", "polyline", "radialgradient", "rect", "stop", "switch", "symbol", "text", "textpath", "title", "tref", "tspan", "view", "vkern", "feBlend", "feColorMatrix", "feComponentTransfer", "feComposite", "feConvolveMatrix", "feDiffuseLighting", "feDisplacementMap", "feFlood", "feFuncA", "feFuncB", "feFuncG", "feFuncR", "feGaussianBlur", "feImage", "feMerge", "feMergeNode", "feMorphology", "feOffset", "feSpecularLighting", "feTile", "feTurbulence", "math", "menclose", "merror", "mfenced", "mfrac", "mglyph", "mi", "mlabeledtr", "mmuliscripts", "mn", "mo", "mover", "mpadded", "mphantom", "mroot", "mrow", "ms", "mpspace", "msqrt", "mystyle", "msub", "msup", "msubsup", "mtable", "mtd", "mtext", "mtr", "munder", "munderover", "#text"]),
        w = null,
        x = s({}, ["accept", "action", "align", "alt", "autocomplete", "background", "bgcolor", "border", "cellpadding", "cellspacing", "checked", "cite", "class", "clear", "color", "cols", "colspan", "coords", "datetime", "default", "dir", "disabled", "download", "enctype", "face", "for", "headers", "height", "hidden", "high", "href", "hreflang", "id", "ismap", "label", "lang", "list", "loop", "low", "max", "maxlength", "media", "method", "min", "multiple", "name", "noshade", "novalidate", "nowrap", "open", "optimum", "pattern", "placeholder", "poster", "preload", "pubdate", "radiogroup", "readonly", "rel", "required", "rev", "reversed", "rows", "rowspan", "spellcheck", "scope", "selected", "shape", "size", "span", "srclang", "start", "src", "step", "style", "summary", "tabindex", "title", "type", "usemap", "valign", "value", "width", "xmlns", "allowfullscreen", "target", "accent-height", "accumulate", "additivive", "alignment-baseline", "ascent", "attributename", "attributetype", "azimuth", "basefrequency", "baseline-shift", "begin", "bias", "by", "clip", "clip-path", "clip-rule", "color", "color-interpolation", "color-interpolation-filters", "color-profile", "color-rendering", "cx", "cy", "d", "dx", "dy", "diffuseconstant", "direction", "display", "divisor", "dur", "edgemode", "elevation", "end", "fill", "fill-opacity", "fill-rule", "filter", "flood-color", "flood-opacity", "font-family", "font-size", "font-size-adjust", "font-stretch", "font-style", "font-variant", "font-weight", "fx", "fy", "g1", "g2", "glyph-name", "glyphref", "gradientunits", "gradienttransform", "image-rendering", "in", "in2", "k", "k1", "k2", "k3", "k4", "kerning", "keypoints", "keysplines", "keytimes", "lengthadjust", "letter-spacing", "kernelmatrix", "kernelunitlength", "lighting-color", "local", "marker-end", "marker-mid", "marker-start", "markerheight", "markerunits", "markerwidth", "maskcontentunits", "maskunits", "max", "mask", "mode", "min", "numoctaves", "offset", "operator", "opacity", "order", "orient", "orientation", "origin", "overflow", "paint-order", "path", "pathlength", "patterncontentunits", "patterntransform", "patternunits", "points", "preservealpha", "r", "rx", "ry", "radius", "refx", "refy", "repeatcount", "repeatdur", "restart", "rotate", "scale", "seed", "shape-rendering", "specularconstant", "specularexponent", "spreadmethod", "stddeviation", "stitchtiles", "stop-color", "stop-opacity", "stroke-dasharray", "stroke-dashoffset", "stroke-linecap", "stroke-linejoin", "stroke-miterlimit", "stroke-opacity", "stroke", "stroke-width", "surfacescale", "targetx", "targety", "transform", "text-anchor", "text-decoration", "text-rendering", "textlength", "u1", "u2", "unicode", "values", "viewbox", "visibility", "vert-adv-y", "vert-origin-x", "vert-origin-y", "word-spacing", "wrap", "writing-mode", "xchannelselector", "ychannelselector", "x", "x1", "x2", "y", "y1", "y2", "z", "zoomandpan", "accent", "accentunder", "bevelled", "close", "columnsalign", "columnlines", "columnspan", "denomalign", "depth", "display", "displaystyle", "fence", "frame", "largeop", "length", "linethickness", "lspace", "lquote", "mathbackground", "mathcolor", "mathsize", "mathvariant", "maxsize", "minsize", "movablelimits", "notation", "numalign", "open", "rowalign", "rowlines", "rowspacing", "rowspan", "rspace", "rquote", "scriptlevel", "scriptminsize", "scriptsizemultiplier", "selection", "separator", "separators", "stretchy", "subscriptshift", "supscriptshift", "symmetric", "voffset", "xlink:href", "xml:id", "xlink:title", "xml:space", "xmlns:xlink"]),
        y = null,
        z = null,
        A = !0,
        B = !1,
        C = !1,
        D = !1,
        E = !1,
        F = !1,
        G = !1,
        H = !0,
        I = !0,
        J = s({}, ["audio", "head", "math", "script", "style", "svg", "video"]),
        K = null,
        L = d.createElement("form"),
        M = function(a) {
            typeof a != "object" && (a = {}), u = "ALLOWED_TAGS" in a ? s({}, a.ALLOWED_TAGS) : v, w = "ALLOWED_ATTR" in a ? s({}, a.ALLOWED_ATTR) : x, y = "FORBID_TAGS" in a ? s({}, a.FORBID_TAGS) : {}, z = "FORBID_ATTR" in a ? s({}, a.FORBID_ATTR) : {}, A = a.ALLOW_DATA_ATTR !== !1, B = a.SAFE_FOR_JQUERY || !1, C = a.SAFE_FOR_TEMPLATES || !1, D = a.WHOLE_DOCUMENT || !1, E = a.RETURN_DOM || !1, F = a.RETURN_DOM_FRAGMENT || !1, G = a.RETURN_DOM_IMPORT || !1, H = a.SANITIZE_DOM !== !1, I = a.KEEP_CONTENT !== !1, F && (E = !0), a.ADD_TAGS && (u === v && (u = t(u)), s(u, a.ADD_TAGS)), a.ADD_ATTR && (w === x && (w = t(w)), s(w, a.ADD_ATTR)), I && (u["#text"] = !0), Object && "freeze" in Object && Object.freeze(a), K = a
        },
        N = function(a) {
            try {
                a.parentNode.removeChild(a)
            } catch (b) {
                a.outerHTML = ""
            }
        },
        O = function(a) {
            var b, c;
            try {
                b = (new l).parseFromString(a, "text/html")
            } catch (d) {}
            return b || (b = m.createHTMLDocument(""), c = b.body, c.parentNode.removeChild(c.parentNode.firstElementChild), c.outerHTML = a), typeof b.getElementsByTagName == "function" ? b.getElementsByTagName(D ? "html" : "body")[0] : o.call(b, D ? "html" : "body")[0]
        },
        P = function(a) {
            return n.call(a.ownerDocument || a, a, h.SHOW_ELEMENT | h.SHOW_COMMENT | h.SHOW_TEXT, function() {
                return h.FILTER_ACCEPT
            }, !1)
        },
        Q = function(a) {
            return a instanceof j || a instanceof k ? !1 : typeof a.nodeName == "string" && typeof a.textContent == "string" && typeof a.removeChild == "function" && a.attributes instanceof i && typeof a.removeAttribute == "function" && typeof a.setAttribute == "function" ? !1 : !0
        },
        R = /\{\{.*|.*\}\}/gm,
        S = /<%.*|.*%>/gm,
        T = function(a) {
            Z("beforeSanitizeElements", a, null);
            if (Q(a)) return N(a), !0;
            var b = a.nodeName.toLowerCase();
            Z("uponSanitizeElement", a, {
                tagName: b
            });
            if (!u[b] || y[b]) {
                if (I && !J[b] && typeof a.insertAdjacentHTML == "function") try {
                    a.insertAdjacentHTML("AfterEnd", a.innerHTML)
                } catch (c) {}
                return N(a), !0
            }
            B && !a.firstElementChild && (!a.content || !a.content.firstElementChild) && (a.innerHTML = a.textContent.replace(/</g, "&lt;"));
            if (C && a.nodeType === 3) {
                var d = a.textContent;
                d = d.replace(R, " "), d = d.replace(S, " "), a.textContent = d
            }
            return Z("afterSanitizeElements", a, null), !1
        },
        U = /^data-[\w.\u00B7-\uFFFF-]/,
        V = /^(?:\w+script|data):/i,
        W = /[\x00-\x20\xA0\u1680\u180E\u2000-\u2029\u205f\u3000]/g,
        X = function(a) {
            Z("beforeSanitizeAttributes", a, null);
            var c = a.attributes;
            if (!c) return;
            var e = {
                    attrName: "",
                    attrValue: "",
                    keepAttr: !0
                },
                f = c.length,
                g, h, i, j, k;
            while (f--) {
                g = c[f], h = g.name, i = g.value, j = h.toLowerCase(), e.attrName = j, e.attrValue = i, e.keepAttr = !0, Z("uponSanitizeAttribute", a, e), i = e.attrValue, j === "name" && a.nodeName === "IMG" && c.id ? (k = c.id, c = Array.prototype.slice.apply(c), a.removeAttribute("id"), a.removeAttribute(h), c.indexOf(k) > f && a.setAttribute("id", k.value)) : (h === "id" && a.setAttribute(h, ""), a.removeAttribute(h));
                if (!e.keepAttr) continue;
                if (H && (j === "id" || j === "name") && (i in b || i in d || i in L)) continue;
                if ((w[j] && !z[j] || !C && A && U.test(j)) && (!V.test(i.replace(W, "")) || j === "src" && i.indexOf("data:") === 0 && a.nodeName === "IMG")) try {
                    C && (i = i.replace(R, " "), i = i.replace(S, " ")), a.setAttribute(h, i)
                } catch (l) {}
            }
            Z("afterSanitizeAttributes", a, null), a.nodeName.toLowerCase() === "a" && a.href && a.setAttribute("href", a.href)
        },
        Y = function(a) {
            var b, c = P(a);
            Z("beforeSanitizeShadowDOM", a, null);
            while (b = c.nextNode()) {
                Z("uponSanitizeShadowNode", b, null);
                if (T(b)) continue;
                b.content instanceof f && Y(b.content), X(b)
            }
            Z("afterSanitizeShadowDOM", a, null)
        },
        Z = function(a, b, d) {
            if (!r[a]) return;
            r[a].forEach(function(a) {
                a.call(c, b, d, K)
            })
        };
    return c.sanitize = function(a, d) {
        a || (a = ""), typeof a != "string" && (a = a.toString());
        if (!c.isSupported) return typeof b.toStaticHTML == "object" || typeof b.toStaticHTML == "function" ? b.toStaticHTML(a) : a;
        M(d);
        if (!E && !D && a.indexOf("<") === -1) return a;
        var g = O(a);
        if (!g) return E ? null : "";
        var h, i, j = P(g);
        while (h = j.nextNode()) {
            if (h.nodeType === 3 && h === i) continue;
            if (T(h)) continue;
            h.content instanceof f && Y(h.content), X(h), i = h
        }
        var k;
        if (E) {
            if (F) {
                k = p.call(g.ownerDocument);
                while (g.firstChild) k.appendChild(g.firstChild)
            } else k = g;
            return G && (k = q.call(e, k, !0)), k
        }
        return D ? g.outerHTML : g.innerHTML
    }, c.addHook = function(a, b) {
        if (typeof b != "function") return;
        r[a] = r[a] || [], r[a].push(b)
    }, c.removeHook = function(a) {
        r[a] && r[a].pop()
    }, c.removeHooks = function(a) {
        r[a] && (r[a] = [])
    }, c.removeAllHooks = function() {
        r = []
    }, c
}), ZohoDeskEditor.prototype.createToolbar = function() {
    "use strict";
    var a = this,
        b = {},
        c, d = a.initobj.toolbar,
        e = document,
        f = e.body,
        g = ZohoDeskEditor.i18n,
        h, i, j, k = 0,
        l, m, n, o, p, q, r, s, t, u, v, w, x;
    c = ZohoDeskEditor_Init.toolbarOrder, j = function(b) {
        return function(c) {
            a._stopEvent(c);
            var d = a._getSelection();
            try {
                var e = a._createRange(d)
            } catch (f) {
                a.range ? (a.range.select(), delete a.range) : a.win.focus()
            }
            return a.execCommand(c, b), !1
        }
    }, a.toolbarobject = b, i = e.createElement("div"), i.className = "KB_Editor_menus", a.outerdiv.appendChild(i), a.toolbardiv = i, m = e.createElement("ul"), m.className = "KB_Editor_MultiTools", n = e.createElement("ul"), n.className = "KB_Editor_MultiTools", a.toolbardiv.appendChild(m), a.toolbardiv.appendChild(n);
    var y = function(b) {
        return a._stopEvent(b), !1
    };
    x = function() {
        return function(b) {
            a._stopEvent(b);
            var c = b.target.className,
                d, e = a._getSelection();
            try {
                var f = a._createRange(e)
            } catch (g) {
                a.range ? (a.range.select(), delete a.range) : a.win.focus()
            }
            switch (c) {
                case "zei-order":
                    d = "insertorderedlist";
                    break;
                case "zei-unorder":
                    d = "insertunorderedlist";
                    break;
                case "zei-textleft":
                    d = "j-left";
                    break;
                case "zei-textright":
                    d = "j-right";
                    break;
                case "zei-textfull":
                    d = "j-full";
                    break;
                case "zei-textcenter":
                    d = "j-center"
            }
            return a.execCommand(b, d), a.saveCurrentState(), !1
        }
    };
    var z, A, B = 0,
        C = 0,
        D;
    l = c.length;
    for (k = 0; k < l; k++) {
        u = c[k], v = u[0], w = u[2];
        var E = ZohoDeskEditor_Init.maxiconpath || 0;
        o = e.createElement("li"), m.appendChild(o), D = e.createElement("span"), D.className = w, D.title = g(u[1]);
        if (v !== "heading" && v !== "fontSize" && v !== "insertoptions")
            for (var F = 0; F < E; F++) {
                var G = e.createElement("span");
                G.className = "path" + (F + 1), D.appendChild(G)
            }
        o.appendChild(D);
        if (v === "heading" || v === "fontSize" || v === "insertoptions") {
            var H = e.createElement("i");
            H.className = "KBEditortools-Block-down-arrow i-tag", v === "heading" ? D.appendChild(e.createTextNode("Normal")) : v === "fontSize" ? D.appendChild(e.createTextNode("18")) : D.appendChild(e.createTextNode("Insert")), D.appendChild(H)
        }
        v === "styletext" && (o.className = "KB_Editor_FullScreen"), v === "plaintext" && (D.appendChild(e.createTextNode("Plain text")), D.classList.remove("KB_Editor_PlainText", "KB_Editor_FullScreen"), D.className = "KB_Editor_PlainText", o.classList.add("fright")), v === "editorexpand" && (o.className = "fright KB_Editor_Expand"), ZohoDeskEditor._addEvent(D, "click", j(v)), ZohoDeskEditor._addEvent(D, "mousedown", y), b[v] = D
    }
    p = e.createElement("li"), p.className = "KB_Editor_FullScreen", D = e.createElement("span"), D.className = "KB_Editor_Richtext", D.appendChild(e.createTextNode("Rich Text")), ZohoDeskEditor._addEvent(D, "click", j("plaintext")), ZohoDeskEditor._addEvent(D, "mousedown", y), p.appendChild(D), n.appendChild(p), n.style.display = "none", typeof a.afterToolbarGenerate == "function" && a.afterToolbarGenerate(b)
}, ZohoDeskEditor.prototype.expandToolbar = function(a) {
    "use strict";
    var b = this,
        c, d, e = document,
        f = e.body,
        g, h;
    c = a.currentTarget, d = b.alterTool, g = d.style;
    if (g.display !== "none") {
        g.display = "none", c.parentNode.style.backgroundColor = "";
        return
    }
    var i = function() {
            var a = b.alterTool.style;
            a.left = c.offsetParent.offsetLeft + c.offsetLeft + c.offsetWidth - b.alterTool.offsetWidth + "px"
        },
        j = function(d) {
            var e = b.alterTool,
                f;
            if (a) {
                f = d.target;
                for (; f !== null; f = f.parentNode)
                    if (f === e || f === c) break
            }
            f || h()
        };
    h = function() {
        var a = b.alterTool;
        a && (a.style.display = "none", c.parentNode.style.backgroundColor = "", ZohoDeskEditor._removeEvent(document, "mousedown", j), ZohoDeskEditor._removeEvent(b.doc, "mousedown", j))
    }, g.display = "", c.parentNode.style.backgroundColor = "#f1f1f1", i(), b.removeAlterToolbar = function() {
        b.alterTool.style.display !== "none" && h()
    }, ZohoDeskEditor._addEvent(document, "mousedown", j), ZohoDeskEditor._addEvent(b.doc, "mousedown", j)
}, ZohoDeskEditor.prototype.resizeToolbar = function(a) {
    "use strict";
    var b = this,
        c, d;
    b.initToolbarBlock ? c = b.initToolbarBlock : c = ZohoDeskEditor_Init.initToolbarBlock, b.initToolbarBlock = a;
    var e = b.toolbardiv.getElementsByTagName("ul"),
        f = b.toolbardiv.getElementsByTagName("font"),
        g = e.length;
    if (a === c) return;
    var h = e[c - 1];
    h.style.display = "", h.parentNode.removeChild(h);
    if (a > c)
        for (d = c - 1; d < a - 1; d++) e[d].style.display = "", f[d - 1].style.display = "";
    else {
        f[a - 1].style.display = "none";
        for (d = a - 1; d < g - 2; d++) e[d].style.display = "none", f[d - 1].style.display = "none"
    }
    e[a - 1].parentNode.insertBefore(h, e[a - 1]), h.previousSibling.style.display = ""
}, ZohoDeskEditor.prototype.updateToolbar = function() {
    "use strict";
    var a = this,
        b = a.toolbarobject,
        c = a.doc,
        d, e, f;
    a.win.focus();
    for (d in b) switch (d) {
        case "bold":
        case "italic":
        case "underline":
        case "strikethrough":
        case "superscript":
        case "subscript":
        case "insertorderedlist":
        case "insertunorderedlist":
            c.queryCommandState(d) ? b[d].className.search("KB_Editor_sel") < 0 && ZohoDeskEditor.addClass(b[d].parentElement, "KB_Editor_sel") : ZohoDeskEditor.removeClass(b[d].parentElement, "KB_Editor_sel");
            break;
        case "alignoptions":
            c.queryCommandState("justifyright") ? b[d].className = "KBEditortools-align-right" : c.queryCommandState("justifycenter") ? b[d].className = "KBEditortools-align-center" : c.queryCommandState("justifyfull") ? b[d].className = "KBEditortools-align-justify" : b[d].className = "KBEditortools-align-left";
            break;
        case "listoptions":
            c.queryCommandState("insertunorderedlist") ? b[d].className = "KBEditortools-list-round" : c.queryCommandState("insertorderedlist") && (b[d].className = "KBEditortools-list-number");
            break;
        case "forecolor":
            break;
        case "backcolor":
            break;
        case "fontfamily":
            if (ZohoDeskEditor_Init.changedTools.indexOf(d) < 0) {
                try {
                    var g = c.queryCommandValue("fontName");
                    if (g) b[d].firstChild.innerHTML = ZohoDeskEditor.fsDisp[g];
                    else {
                        var h = a.getFormattingValues("fontName");
                        b[d].firstChild.innerHTML = parseInt(ZohoDeskEditor_Init.defaultFontFamily)
                    }
                } catch (i) {}
                break
            };
        case "fontSize":
            if (ZohoDeskEditor_Init.changedTools.indexOf(d) < 0) {
                try {
                    var j = c.queryCommandValue("fontsize"),
                        k = b[d].innerHTML.substring(b[d].innerHTML.indexOf("<"));
                    if (j) b[d].innerHTML = ZohoDeskEditor.fsDisp[j] + k;
                    else {
                        var l = a.getFormattingValues("size");
                        l ? b[d].innerHTML = a.fontsizeConversion("pxtopt", parseInt(l)) + k : j === 0 ? b[d].innerHTML = ZohoDeskEditor.fsDisp[2] + k : b[d].innerHTML = ZohoDeskEditor_Init.defaultFontSize + k
                    }
                } catch (i) {}
                break
            };
        case "heading":
            if (ZohoDeskEditor_Init.changedTools.indexOf(d) < 0) {
                var m = c.queryCommandValue("formatblock"),
                    k = b[d].innerHTML.substring(b[d].innerHTML.indexOf("<"));
                Number(m.charAt(m.length - 1)) ? b[d].innerHTML = ZohoDeskEditor_Init.heading[Number(m.charAt(m.length - 1)) - 1].htm + k : b[d].innerHTML = ZohoDeskEditor_Init.heading[3].htm + k;
                break
            }
    }
}, ZohoDeskEditor.prototype.createEditor = function() {
    "use strict";
    var a = this,
        b = document,
        c, d = a.initobj,e=d.element?d.element:b.getElementById(d.id),
        f, g, h, i, j;
    ZohoDeskEditor.is_chrome = navigator.userAgent.toLowerCase().indexOf("chrome") > -1, c = b.createElement("iframe"), a.iframe = c, c.className = "KB_Editor_iframe", c.setAttribute("name", "deskEditor"), f = function() {
        var b = c.contentWindow,
            e = b.document || c.contentDocument,
            f = e.body,
            k = d.content,
            l = d.replyText || {},
            m, n, o, p, q, r, s, t, u;
        a.win = b, a.doc = e, c.onload = null, u = function(a) {
            var b = e.getElementsByTagName("head")[0],
                c = e.createElement("link");
            c.type = "text/css", c.rel = "stylesheet", c.href = ZohoDeskEditor_Init.cssPath + "/" + a, b || (f.parentNode.insertBefore(e.createElement("head"), f), b = e.getElementsByTagName("head")[0]), b && b.appendChild(c)
        }, a.doc.body.contentEditable = !0, ZohoDeskEditor._addEvent(e, "mousedown", function(b) {
            var c = b.target,
                d = !0;
            while (c !== null) {
                if (c.nodeName === "IMG") return a.trackimgclick && a.trackimgclick(c), a.resizeimage(b, c), a.styletext && document.getElementById("SolutionForm_Content_Property_Tab").click(), a._stopEvent(b), d = !1, !1;
                if (c.id === "resizeablewrapper" || c.id === "wrapperbottom") d = !1;
                c = c.parentNode
            }
            d && a.removeResize(b)
        }), ZohoDeskEditor._addEvent(e, "mouseup", function(b) {
            a.updateToolbar();
            if (e.getElementById("_enclosingDiv")) return !1;
            if (e.getElementsByClassName("enc").length >= 1) return !1;
            if (e.getElementById("_colEncloseDiv")) return !1;
            var c = b.target,
                d;
            while (c !== null) {
                if (c.nodeName === "A") return c.hasAttribute("data-hugatt") ? !1 : (a._stopEvent(b), a.showAnchorTag(c, b), !1);
                if (c.nodeName === "IMG") return c.parentNode.nodeName === "A" && (a._stopEvent(b), a.showAnchorTag(c.parentNode, b)), !1;
                if (c.nodeName === "TABLE") return e.getElementById("_enclosingDiv") ? !1 : (a._stopEvent(b), a.resizeTable(c), a.styletext && a.handleContentStyles(), !1);
                c = c.parentNode
            }
            clearTimeout(d), d = setTimeout(function() {
                a.styletext && a.handleContentStyles()
            }, 10)
        }), g = function(b) {
            var c = b.dataTransfer,
                d = ZohoDeskEditor.i18n,
                f;
            a.win.focus();
            if ((c.types !== null || c.files && c.files.length > 0) && !b.fromPaste) {
                if (c.files && c.files.length > 0 || (c.types.indexOf ? c.types.indexOf("Files") !== -1 : c.types.contains("application/x-moz-file")) || c.types[0] === "Files") {
                    clearTimeout(a.dragTimer), f = c.effectAllowed, c.dropEffect = f === "move" || f === "linkMove" ? "move" : "copy";
                    var g;
                    g = a.saveSelection();
                    var h, i, j;
                    h = e.getElementById("mask_editor"), h || (h = e.createElement("div"), h.contentEditable = "false", h.id = "mask_editor", j = e.createElement("span"), j.innerHTML = d("Drop Files to Attach"), h.appendChild(j), e.body.appendChild(h), i = h.style, i.height = a.doc.body.offsetHeight + "px", i.left = "0px", i.position = "absolute", g && a.restoreSelection(g), a.win.focus())
                }
                a._stopEvent(b)
            }
        }, j = function(b) {
            a.dragTimer = setTimeout(function() {
                var a = e.getElementById("mask_editor");
                a && a.parentElement.removeChild(a)
            }, 250), a._stopEvent(b)
        }, i = function(b) {
            for (var c = b.dataTransfer.items, d = c.length, e = 0; d > e; e++)
                if ("file" === c[e].kind && "image/png" === c[e].type) {
                    var f = c[e].getAsFile();
                    f.name = f.name = "zohodesk_" + (new Date).getTime() + Math.floor(1e3 * Math.random() + 1), a.processInlineImages(f, "customPaste")
                }
        }, h = function(b) {
            var c = b.dataTransfer.files;
            if (c) {
                a._stopEvent(b);
                var d = e.getElementById("mask_editor"),
                    f = 0,
                    g = 0;
                d && d.parentElement.removeChild(d), a.win.focus();
                if (b.editorCustomPaste) {
                    a.processPastedFile && i(b);
                    return
                }
                f = c.length;
                if (f > 5) {
                    a.handleAlertMessage ? a.handleAlertMessage("Only 5 files are allowed") : alert("Only 5 files are allowed");
                    return
                }
                for (var h = 0; h < c.length; h++) {
                    if (!c[h].type || c[h].type.indexOf("image") < 0 || c[h].size / 1048576 > 20) {
                        g++;
                        break
                    }
                    a.processInlineImages(c[h], "drop")
                }
                if (g > 0) {
                    var j = g === 1 ? "one file is not supported" : g + " " + "files are not supported";
                    a.handleAlertMessage ? a.handleAlertMessage(j) : alert(j)
                }
            }
        }, a.handleInlineDropImage && (ZohoDeskEditor._addEvent(e, "drop", h), ZohoDeskEditor._addEvent(e, "dragover", g), ZohoDeskEditor._addEvent(e, "dragleave", j));
        var v, w = function() {
            a.stack = new ze_Undo.Stack, v = a.stack, a.EditorState = {}, a.EditorState = function(b, c, d) {
                this.textarea = b, this.newValue = c, this._currentselection = d, this.undo = function() {
                    a.squireInstance._setHTML(this.newValue)
                }, this.redo = function() {
                    a.squireInstance._setHTML(this.newValue)
                }, this.setFocus = function() {
                    var b = this._currentselection;
                    a.restoreCursorPosition(a.doc.body, b), a.win.focus()
                }
            };
            var b = a.getContent(),
                c;
            a.initobj.handleAutoFill && a.mentionsHandler(), ZohoDeskEditor._addEvent(e, "keyup", function(d) {
                var e = d.keyCode;
                e !== 13 && a.squireInstance._hasZWS && a.squireInstance._removeZWS();
                if (e === 33 || e === 34) d.stopPropagation(), a.styletext && a.handleContentStyles();
                if (a.undo || a.redo) {
                    b = a.getContent(), a.styletext && a.handleContentStyles();
                    return
                }
                a.styletext && a.handleContentStyles(), a.doc.getElementById("resizeablewrapper") && a.removeResize(), clearTimeout(c), c = setTimeout(function() {
                    var c = a.getContent();
                    c !== b && (b = c, a.saveCurrentState())
                }, 250)
            })
        };
        w(), ZohoDeskEditor._addEvent(e, "keydown", function(b) {
            var c = b.keyCode,
                d = b.shiftKey,
                f = b.metaKey,
                g = b.altKey,
                h = b.ctrlKey,
                i, j = a.stack;
            a.undo = a.redo = !1;
            if ((h || f) && !g && !d) {
                i = String.fromCharCode(c).toLowerCase();
                switch (i) {
                    case "b":
                        a.execCommand(b, "bold");
                        break;
                    case "u":
                        a.execCommand(b, "underline");
                        break;
                    case "i":
                        a.execCommand(b, "italic");
                        break;
                    case "l":
                        a.execCommand(b, "j-left");
                        break;
                    case "e":
                        a.execCommand(b, "j-center");
                        break;
                    case "r":
                        a.execCommand(b, "j-right");
                        break;
                    case "j":
                        a.execCommand(b, "j-full");
                        break;
                    case "k":
                        a.execCommand(b, "link");
                        break;
                    case "z":
                        a._stopEvent(b), j.canUndo() && j.undo(), e.body.classList.remove("highlight_container"), a.undo = !0;
                        break;
                    case "y":
                        a._stopEvent(b), j.canRedo() && j.redo(), a.redo = !0
                }
            }
            a.updateToolbar()
        }), m = function(b, c, d, e, f, g) {
            var h, i, j = {
                8: 10,
                10: 13,
                12: 16,
                14: 18,
                18: 24,
                24: 32,
                36: 48
            };
            c.indexOf("px") !== -1 ? i = c : i = j[parseInt(c)] + "px", h = a.doc.createElement("style"), h.type = "text/css", h.innerHTML = "body{font-family:" + b + ";font-size:" + i + ";margin:" + d + ";line-height:" + f + ";padding:" + e + ";background-color:" + g + "}";
            var k = a.doc.getElementsByTagName("head")[0];
            k && k.appendChild(h)
        }, n = d.defaultfontfamily || "'ProximaNovaRegular',Arial,Helvetica,sans-serif", o = d.defaultfontsize || "15px", p = d.margin || " 0 ", q = d.padding || " 15px 20px ", r = d.lineHeight || "140%", s = d.backgroundColor || "#fff", m(n, o, p, q, r, s), delete a.state, u("ZohoDeskEditor.min.css");
        var x = function(a) {
            var b = a.createElement("span");
            a.body.appendChild(b), setTimeout(function() {
                b.parentNode.removeChild(b)
            }, 100)
        };
        ZohoDeskEditor_Init.is_safari && window.onblur && (ZohoDeskEditor._addEvent(a.doc.body, "focus", function() {
            x(document)
        }), ZohoDeskEditor._addEvent(a.doc.body, "blur", function() {
            var b = a.win.getSelection();
            if (b.isCollapsed) {
                a.pasteHTML && a.pasteHTML("<span id='temp_123paint'></span>");
                var c = a.doc.getElementById("temp_123paint");
                c && c.parentNode.removeChild(c)
            }
        })), ZohoDeskEditor._addEvent(a.win, "scroll", function() {
            var a = document.getElementById("ze_linkBlock");
            a && document.body.removeChild(a)
        }), ZohoDeskEditor._addEvent(a.doc.body, "contextmenu", function(b) {
            var c = b.target;
            while (c !== null) {
                if (c.nodeName === "TABLE" && ZohoDeskEditor.getAttribute(c, "data-avoidContext") !== "true") return a._stopEvent(b), a.showContextMenu(b, "table", c), !1;
                c = c.offsetParent
            }
        }), a.squireInstance = new Squire(a.doc, {
            getEditorInstance: function() {
                return a
            }
        }), a.handleInlineDropImage && (a.squireInstance.addEventListener("dragover", function(b) {
            a._stopEvent(b)
        }), a.squireInstance.addEventListener("drop", h));
        if (d.mode !== "plaintext") {
            var y = "";
            if (l && l.value && d.contentType !== "plaintext") {
                var z = ZohoDeskEditor.getQuoteHTML(a.doc, l.value, l.className, l.contentEdit, l.cursor);
                y = z
            }
            if (!k) k = y, a.squireInstance.setHTML(k);
            else if (d.contentType === "plaintext") {
                var A = k.split("\n");
                a.setRichText(A)
            } else {
                var B = document.createElement("div");
                B.innerHTML = k;
                var C = B.getElementsByClassName("direction");
                C && C.length && (a.doc.body.style.direction = "rtl", k = C[0].innerHTML), y.length && (k = y + k), a.squireInstance.setHTML(k)
            }
        }
        if (a.mode === "richtext") {
            if (ZohoDeskEditor_Init.needEditorFocus || a.initobj.needEditorFocus) b.focus(), a.squireInstance.focus();
            a.updateToolbar()
        }
        a.saveCurrentState({
            cursorPosition: {
                start: 0,
                end: 0
            },
            suppressContentChange: !0
        });
        if (!ZohoDeskEditor_Init.needEditorFocus && !a.initobj.needEditorFocus && a.mode === "richtext") {
            var D = b.getSelection() || a.doc.selection;
            D.removeAllRanges(), a.squireInstance.blur()
        }
        a.afterload && a.afterload(a), delete a.afterload
    }, c.onload = f, a.outerdiv.appendChild(c)
}, ZohoDeskEditor.prototype._stopEvent = function(a) {
    "use strict";
    try {
        a.preventDefault(), a.stopPropagation()
    } catch (b) {
        a.cancelBubble = !0, a.returnValue = !0
    }
}, ZohoDeskEditor.getAttribute = function(a, b) {
    "use strict";
    if (a.hasAttribute(b)) return a.getAttribute(b)
}, ZohoDeskEditor.prototype.updateStateHTML = function(a, b) {
    "use strict";
    var c = this;
    c.stack.commands[a].newValue = b
}, ZohoDeskEditor.prototype.pasteContent = function(a) {
    "use strict";
    var b = JSON.stringify(localStorage).length,
        c = b * 16 / 8192 / 1e3,
        d = a.length,
        e = d * 16 / 8192 / 1e3,
        f = new Date,
        g = f.getFullYear(),
        h = f.getMonth() + 1;
    h < 10 && (h = "0" + h);
    var i = f.getDate(),
        j = f.getHours(),
        k = f.getMinutes(),
        l = f.getSeconds();
    f = g + "-" + h + "-" + i + "\t" + j + ":" + k + ":" + l, e + c <= 10 ? localStorage.setItem(f, JSON.stringify(a)) : (localStorage.clear(), localStorage.setItem(f, JSON.stringify(a)))
}, ZohoDeskEditor.prototype.insertTextStyles = function(a) {
    var b = this,
        c = b.doc,
        d = c.body,
        e = a.target.nodeName === "I" ? a.target.parentElement.getAttribute("role") : a.target.getAttribute("role"),
        f = undefined,
        g = undefined,
        h = !1,
        i = undefined,
        j = undefined,
        k = undefined,
        l = undefined,
        m = undefined,
        n = undefined,
        o = 0;
    b.squireInstance.focus(), f = b.win.getSelection();
    if (!f.valueOf().toString()) return;
    l = c.createDocumentFragment(), h = c.createElement("SPAN"), h.id = "KB_Editor_Container", h.className = e ? e + " KB_Editor_Highlights" : "KB_Editor_Highlights", l.appendChild(h), g = f.getRangeAt(0), j = g.commonAncestorContainer, k = j ? j.nodeName : "";
    var p = function() {
            i = c.createElement("DIV"), g.insertNode(i), i.appendChild(l), n = h.getElementsByClassName("KB_Editor_Highlights"), emptyHighLights = d.getElementsByClassName("KB_Editor_Highlights"), spanLastChild = h.lastChild;
            for (var e = 0; e < emptyHighLights.length; e++) !emptyHighLights[e].innerText.trim().length && emptyHighLights[e].parentElement.parentNode.removeChild(emptyHighLights[e].parentElement);
            while (n[0]) {
                var j = n[0].children,
                    k = n[0].parentNode,
                    m = c.createElement("div");
                i = n[0].children;
                while (j[0]) l.appendChild(j[0]);
                m.appendChild(l), k.insertAdjacentHTML("beforebegin", m.innerHTML), n[0].parentNode.removeChild(n[0]), k.parentNode && k.nodeName === "DIV" && k.parentNode.removeChild(k)
            }
            d.lastChild === h.parentElement && (d.appendChild(c.createElement("div")), d.lastChild.appendChild(c.createElement("br"))), spanLastChild && spanLastChild.nodeName === "DIV" && spanLastChild.childNodes && spanLastChild.childNodes.length === 1 && spanLastChild.firstChild.nodeName === "BR" && spanLastChild.parentNode.removeChild(spanLastChild), SolutionForm.textHighLightsFromTarget(a), f = c.getSelection(), f.removeAllRanges(), f.addRange(g), b.saveCurrentState()
        },
        q = function(a) {
            var b = a.childNodes;
            m = b.length, o = 1;
            while (o < m) {
                if (b[0].nodeName !== b[o].nodeName) return g.insertNode(a), f = c.getSelection(), c.getSelection().removeAllRanges(), f.addRange(g), !1;
                o++
            }
            return !0
        };
    if (k === "#text" || ["UL", "OL", "DIV", "H1", "H2", "H3", "TABLE", "SPAN", "P", "PRE"].indexOf(k) >= 0 || j.getAttribute("id") === "KB_Editor_Container") {
        var r = j,
            s = j,
            t = j;
        if (["TABLE", "UL", "OL"].indexOf(k) < 0 && (k !== "SPAN" || j.getAttribute("id") !== "KB_Editor_Container")) {
            while (r.parentNode !== d && ["UL", "OL"].indexOf(r.parentNode.nodeName) < 0) r = r.parentNode;
            while (t.parentNode !== d && ["TABLE"].indexOf(t.parentNode.nodeName) < 0) t = t.parentNode;
            while (s.parentNode !== d && s.parentNode.getAttribute("id") !== "KB_Editor_Container") s = s.parentNode;
            while (j.parentNode !== d && ["DIV", "H1", "H2", "H3", "TD", "SPAN", "P", "PRE"].indexOf(j.parentNode.nodeName) < 0) j = j.parentNode;
            j = j.parentNode !== d ? j.parentNode : j
        }
        if (s.parentNode.getAttribute("id") === "KB_Editor_Container") {
            var u = s.parentNode,
                v = s.parentNode.parentNode;
            l.firstChild.innerHTML = u.innerHTML, u.parentNode.removeChild(u), v && v.nodeName === "DIV" && v.parentNode.removeChild(v)
        } else if (["TABLE"].indexOf(t.parentNode.nodeName) >= 0) l.firstChild.appendChild(t.parentNode);
        else if (["UL", "OL"].indexOf(r.parentNode.nodeName) >= 0) l.firstChild.appendChild(r.parentNode);
        else if (j.getAttribute("id") === "KB_Editor_Container") {
            var u = j,
                v = j.parentNode;
            l.firstChild.innerHTML = u.innerHTML, u.parentNode.removeChild(u), v && v.nodeName === "DIV" && v.parentNode.removeChild(v)
        } else l.firstChild.appendChild(j);
        p()
    } else if (["TABLE", "TBODY", "TR", "TD"].indexOf(k) >= 0) {
        while (j.parentNode !== d && j.parentNode.nodeName !== "TABLE") j = j.parentNode;
        var s = j;
        while (s.parentNode !== d && s.parentNode.getAttribute("id") !== "KB_Editor_Container") s = s.parentNode;
        if (s.parentNode.getAttribute("id") === "KB_Editor_Container") {
            var u = s.parentNode,
                v = s.parentNode.parentNode;
            l.firstChild.innerHTML = u.innerHTML, u.parentNode.removeChild(u), v && v.nodeName === "DIV" && v.parentNode.removeChild(v)
        } else j = j.parentNode !== d ? j.parentNode : j, l.firstChild.appendChild(j);
        p()
    } else {
        var w = b.squireInstance.extractCommonContainer(g, j, d);
        if (q(w)) l.firstChild.appendChild(w);
        else if (j === d) {
            j = j.children;
            while (j[0]) l.firstChild.appendChild(j[0])
        } else l.firstChild.appendChild(j);
        p()
    }
}, ZohoDeskEditor.prototype.handleContentStyles = function() {
    var a = this,
        b = a.doc,
        c = b.getSelection(),
        d = ["h1", "h2", "h3", "heading 1", "heading 2", "heading 3"].indexOf(b.queryCommandValue("formatblock").toLowerCase()) > -1 ? !0 : !1,
        e = undefined;
    text = c.valueOf().toString().trim(), isTextSelected = text.length && text !== "​", text.length && text === "​" && c.getRangeAt(0).collapse();
    if (SolutionForm.ISEXAPNDED || document.getElementsByClassName("SolutionForm_Content_Property_Tab")[0].offsetHeight === 0) {
        e = c.anchorNode && (c.anchorNode.nodeName !== "BODY" && c.anchorNode.nodeName !== "#text" ? c.anchorNode : c.anchorNode.parentElement);
        var f = e ? e.tagName : "";
        if (!d && isTextSelected) {
            var g = a.toolbardiv.getElementsByClassName("KBEditortools-txtbgclr")[0];
            g.className.indexOf("ze_Sel") < 0 && g.click()
        }
    } else {
        e = c.anchorNode && (c.anchorNode.nodeName !== "BODY" && c.anchorNode.nodeName !== "#text" ? c.anchorNode : c.anchorNode.parentElement);
        var f = e ? e.tagName : "";
        d ? document.getElementById("SolutionForm_Anchor_Property_Tab").click() : SolutionForm.IMGCLICKED || e && e.id === "KB_Editor_Container" || isTextSelected || SolutionForm.IMGCLICKED && e && e.nodeName !== "BODY" && e.nodeName !== "#text" && e.getElementsByTagName("img").length ? (document.getElementById("SolutionForm_Content_Property_Tab").click(), SolutionForm.IMGCLICKED ? SolutionForm.IMGCLICKED = !1 : "") : document.getElementById("SolutionForm_Article_Property_Tab").click()
    }
}, ZohoDeskEditor.prototype.insertTOC = function() {
    var a = this,
        b = a.doc,
        c = b.querySelectorAll("h1,h2,h3"),
        d = c.length,
        e, f, g, h = document.getElementById("SolutionForm_Anchor_Property").children[0],
        i, j, k = 0,
        l = a.doc.body.innerText.trim().length > 0 ? "There are no headings in this article to generate TOC" : "Add headings to generate TOC";
    h.innerHTML = "";
    var m = function(a) {
            var b = a.target.parentElement.parentElement.lastChild;
            if (!b.children) return;
            a.target.classList.toggle("SolutionForm_Rotate0"), b.classList.toggle("hide")
        },
        n = function(a) {
            var c = a.target,
                d = c.href;
            d.length && (b.body.scrollTop = b.getElementById(d).offsetTop)
        },
        o = function(a) {
            var b = a.children.length,
                c = a.getElementsByClassName("size").length;
            return b > 0 && c > 0 && (c + 1 === b || c === b) ? !1 : !0
        };
    if (d > 0) {
        for (e = 0; e < d; e++) {
            var p = c[e],
                q = c[e].tagName,
                r = c[e].textContent.trim();
            r.length < 1 || c[e].children.length > 1 && o(c[e]) ? (c[e].removeAttribute("id"), k += 1) : (!c[e].id || c[e].id.indexOf("heading_") !== 0 || b.querySelectorAll("#" + c[e].id).length > 1 ? c[e].id = "heading_" + (new Date).getTime() + e : f = c[e].id, j = document.createElement("div"), j.href = c[e].id, j.id = "anchor_" + c[e].tagName.toLowerCase(), j.className = "temp_class", j.textContent = r, h.appendChild(j))
        }
        if (k === d) h.innerText = l;
        else {
            var s = h.getElementsByClassName("temp_class"),
                d = s.length,
                e = 0,
                t = s[e].id,
                u, v, w;
            for (e = 0; e < d; e++) {
                var x = s[0],
                    f = x.id;
                t < f ? (x.className = "SolutionForm_comList", u.lastChild.appendChild(x)) : (u = document.createElement("div"), h.appendChild(u), u.className = "SolutionForm_Anchor_ListDiv", x.className = "SolutionForm_Anchor_Title", w = document.createElement("i"), w.className = "icon-Block-down-arrow i-tag", u.appendChild(x), x.appendChild(w), ZohoDeskEditor._addEvent(w, "click", m), u.appendChild(document.createElement("div")), t = f), ZohoDeskEditor._addEvent(x, "click", n)
            }
        }
        k = 0
    } else h.innerText = l
}, ZohoDeskEditor.getQuoteHTML = function(a, b, c, d, e) {
    var a = editor.doc,
        c = c || "KB_Editor_QuoteBGclr KB_Editor_Highlights",
        f = a.createElement("div"),
        g = a.createElement("span"),
        d = d || !1;
    return f.innerHTML = b, g.id = "KB_Editor_Container", g.className = c, g.appendChild(f), g.contentEditable = !1, g.style.cursor = e || "default", sapn.outerHTML
}, ZohoDeskEditor.prototype.insertReplyText = function(a, b, c, d) {
    try {
        var e = this,
            f = e.mode,
            g = e.doc;
        if (a.trim().length && f && f !== "plaintext") {
            var h = ZohoDeskEditor.getQuoteHTML(g, a, b, c, d);
            e.insertHTML(document.createElement("br").outerHTML + h, !0), e.saveCurrentState(), e.win.focus()
        }
    } catch (i) {}
};